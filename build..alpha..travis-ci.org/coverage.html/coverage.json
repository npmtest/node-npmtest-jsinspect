{"/home/travis/build/npmtest/node-npmtest-jsinspect/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jsinspect */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/lib.npmtest_jsinspect.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/lib.npmtest_jsinspect.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jsinspect */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jsinspect = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jsinspect = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jsinspect && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jsinspect */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jsinspect","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jsinspect.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_jsinspect.rollup.js'] =","            local.assetsDict['/assets.npmtest_jsinspect.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_jsinspect.__dirname + '/lib.npmtest_jsinspect.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":2}}},"branchMap":{},"code":["module.exports = {","  Inspector: require('./lib/inspector'),","  reporters: require('./lib/reporters')","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/inspector.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/inspector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":27,"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":31}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":5},"end":{"line":51,"column":8}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":7},"end":{"line":81,"column":18}}},"4":{"name":"(anonymous_4)","line":112,"loc":{"start":{"line":112,"column":15},"end":{"line":112,"column":28}}},"5":{"name":"(anonymous_5)","line":140,"loc":{"start":{"line":140,"column":9},"end":{"line":140,"column":17}}},"6":{"name":"(anonymous_6)","line":171,"loc":{"start":{"line":171,"column":10},"end":{"line":171,"column":13}}},"7":{"name":"(anonymous_7)","line":219,"loc":{"start":{"line":219,"column":27},"end":{"line":219,"column":40}}},"8":{"name":"(anonymous_8)","line":249,"loc":{"start":{"line":249,"column":29},"end":{"line":249,"column":38}}},"9":{"name":"(anonymous_9)","line":267,"loc":{"start":{"line":267,"column":26},"end":{"line":267,"column":35}}},"10":{"name":"(anonymous_10)","line":285,"loc":{"start":{"line":285,"column":9},"end":{"line":285,"column":22}}},"11":{"name":"(anonymous_11)","line":324,"loc":{"start":{"line":324,"column":8},"end":{"line":324,"column":21}}},"12":{"name":"(anonymous_12)","line":340,"loc":{"start":{"line":340,"column":13},"end":{"line":340,"column":20}}},"13":{"name":"(anonymous_13)","line":368,"loc":{"start":{"line":368,"column":12},"end":{"line":368,"column":20}}},"14":{"name":"(anonymous_14)","line":391,"loc":{"start":{"line":391,"column":8},"end":{"line":391,"column":21}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":50}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":12}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":22}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":41}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":46}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":39}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":48}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":45}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"18":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":48}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":23}},"21":{"start":{"line":55,"column":4},"end":{"line":65,"column":7}},"22":{"start":{"line":56,"column":6},"end":{"line":56,"column":62}},"23":{"start":{"line":57,"column":6},"end":{"line":57,"column":53}},"24":{"start":{"line":58,"column":6},"end":{"line":62,"column":7}},"25":{"start":{"line":59,"column":8},"end":{"line":59,"column":46}},"26":{"start":{"line":61,"column":8},"end":{"line":61,"column":42}},"27":{"start":{"line":63,"column":6},"end":{"line":63,"column":73}},"28":{"start":{"line":64,"column":6},"end":{"line":64,"column":61}},"29":{"start":{"line":64,"column":40},"end":{"line":64,"column":59}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":20}},"31":{"start":{"line":68,"column":4},"end":{"line":68,"column":21}},"32":{"start":{"line":82,"column":4},"end":{"line":97,"column":7}},"33":{"start":{"line":83,"column":6},"end":{"line":83,"column":41}},"34":{"start":{"line":84,"column":6},"end":{"line":89,"column":7}},"35":{"start":{"line":88,"column":8},"end":{"line":88,"column":15}},"36":{"start":{"line":91,"column":6},"end":{"line":91,"column":67}},"37":{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},"38":{"start":{"line":93,"column":8},"end":{"line":93,"column":18}},"39":{"start":{"line":96,"column":6},"end":{"line":96,"column":35}},"40":{"start":{"line":114,"column":4},"end":{"line":114,"column":49}},"41":{"start":{"line":115,"column":4},"end":{"line":115,"column":28}},"42":{"start":{"line":117,"column":4},"end":{"line":128,"column":5}},"43":{"start":{"line":118,"column":6},"end":{"line":118,"column":60}},"44":{"start":{"line":119,"column":6},"end":{"line":119,"column":39}},"45":{"start":{"line":119,"column":30},"end":{"line":119,"column":39}},"46":{"start":{"line":121,"column":6},"end":{"line":127,"column":7}},"47":{"start":{"line":122,"column":8},"end":{"line":122,"column":72}},"48":{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},"49":{"start":{"line":124,"column":10},"end":{"line":124,"column":32}},"50":{"start":{"line":125,"column":10},"end":{"line":125,"column":16}},"51":{"start":{"line":141,"column":4},"end":{"line":141,"column":37}},"52":{"start":{"line":143,"column":4},"end":{"line":151,"column":7}},"53":{"start":{"line":144,"column":6},"end":{"line":146,"column":7}},"54":{"start":{"line":145,"column":8},"end":{"line":145,"column":30}},"55":{"start":{"line":147,"column":6},"end":{"line":149,"column":7}},"56":{"start":{"line":148,"column":8},"end":{"line":148,"column":35}},"57":{"start":{"line":150,"column":6},"end":{"line":150,"column":40}},"58":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"59":{"start":{"line":154,"column":6},"end":{"line":154,"column":26}},"60":{"start":{"line":157,"column":4},"end":{"line":157,"column":31}},"61":{"start":{"line":172,"column":4},"end":{"line":173,"column":66}},"62":{"start":{"line":173,"column":21},"end":{"line":173,"column":64}},"63":{"start":{"line":177,"column":4},"end":{"line":179,"column":7}},"64":{"start":{"line":178,"column":6},"end":{"line":178,"column":55}},"65":{"start":{"line":181,"column":4},"end":{"line":207,"column":5}},"66":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"67":{"start":{"line":183,"column":8},"end":{"line":183,"column":17}},"68":{"start":{"line":186,"column":6},"end":{"line":186,"column":47}},"69":{"start":{"line":187,"column":6},"end":{"line":187,"column":49}},"70":{"start":{"line":190,"column":6},"end":{"line":190,"column":32}},"71":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"72":{"start":{"line":192,"column":8},"end":{"line":192,"column":58}},"73":{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},"74":{"start":{"line":195,"column":8},"end":{"line":195,"column":55}},"75":{"start":{"line":198,"column":6},"end":{"line":206,"column":7}},"76":{"start":{"line":199,"column":8},"end":{"line":199,"column":60}},"77":{"start":{"line":199,"column":51},"end":{"line":199,"column":60}},"78":{"start":{"line":201,"column":8},"end":{"line":201,"column":32}},"79":{"start":{"line":202,"column":8},"end":{"line":202,"column":41}},"80":{"start":{"line":203,"column":8},"end":{"line":203,"column":48}},"81":{"start":{"line":204,"column":8},"end":{"line":204,"column":34}},"82":{"start":{"line":205,"column":8},"end":{"line":205,"column":31}},"83":{"start":{"line":220,"column":4},"end":{"line":220,"column":24}},"84":{"start":{"line":222,"column":4},"end":{"line":224,"column":6}},"85":{"start":{"line":223,"column":6},"end":{"line":223,"column":47}},"86":{"start":{"line":223,"column":32},"end":{"line":223,"column":45}},"87":{"start":{"line":226,"column":4},"end":{"line":228,"column":6}},"88":{"start":{"line":227,"column":6},"end":{"line":227,"column":43}},"89":{"start":{"line":227,"column":28},"end":{"line":227,"column":41}},"90":{"start":{"line":230,"column":4},"end":{"line":237,"column":5}},"91":{"start":{"line":231,"column":6},"end":{"line":236,"column":7}},"92":{"start":{"line":232,"column":8},"end":{"line":232,"column":34}},"93":{"start":{"line":233,"column":8},"end":{"line":233,"column":17}},"94":{"start":{"line":235,"column":8},"end":{"line":235,"column":32}},"95":{"start":{"line":250,"column":4},"end":{"line":255,"column":7}},"96":{"start":{"line":251,"column":6},"end":{"line":254,"column":19}},"97":{"start":{"line":252,"column":24},"end":{"line":252,"column":33}},"98":{"start":{"line":253,"column":21},"end":{"line":253,"column":30}},"99":{"start":{"line":268,"column":4},"end":{"line":273,"column":7}},"100":{"start":{"line":269,"column":6},"end":{"line":272,"column":19}},"101":{"start":{"line":270,"column":24},"end":{"line":270,"column":53}},"102":{"start":{"line":271,"column":21},"end":{"line":271,"column":31}},"103":{"start":{"line":286,"column":4},"end":{"line":288,"column":7}},"104":{"start":{"line":287,"column":6},"end":{"line":287,"column":53}},"105":{"start":{"line":290,"column":4},"end":{"line":293,"column":7}},"106":{"start":{"line":291,"column":6},"end":{"line":291,"column":41}},"107":{"start":{"line":292,"column":6},"end":{"line":292,"column":41}},"108":{"start":{"line":295,"column":4},"end":{"line":295,"column":32}},"109":{"start":{"line":295,"column":24},"end":{"line":295,"column":31}},"110":{"start":{"line":296,"column":4},"end":{"line":296,"column":49}},"111":{"start":{"line":296,"column":30},"end":{"line":296,"column":48}},"112":{"start":{"line":297,"column":4},"end":{"line":301,"column":6}},"113":{"start":{"line":298,"column":6},"end":{"line":300,"column":9}},"114":{"start":{"line":299,"column":8},"end":{"line":299,"column":67}},"115":{"start":{"line":299,"column":40},"end":{"line":299,"column":66}},"116":{"start":{"line":303,"column":4},"end":{"line":307,"column":6}},"117":{"start":{"line":304,"column":6},"end":{"line":306,"column":60}},"118":{"start":{"line":309,"column":4},"end":{"line":314,"column":5}},"119":{"start":{"line":310,"column":6},"end":{"line":310,"column":38}},"120":{"start":{"line":311,"column":6},"end":{"line":311,"column":41}},"121":{"start":{"line":312,"column":6},"end":{"line":312,"column":36}},"122":{"start":{"line":312,"column":29},"end":{"line":312,"column":36}},"123":{"start":{"line":313,"column":6},"end":{"line":313,"column":61}},"124":{"start":{"line":313,"column":39},"end":{"line":313,"column":59}},"125":{"start":{"line":325,"column":4},"end":{"line":330,"column":5}},"126":{"start":{"line":326,"column":6},"end":{"line":326,"column":32}},"127":{"start":{"line":327,"column":6},"end":{"line":329,"column":7}},"128":{"start":{"line":328,"column":8},"end":{"line":328,"column":35}},"129":{"start":{"line":341,"column":4},"end":{"line":356,"column":5}},"130":{"start":{"line":342,"column":6},"end":{"line":353,"column":7}},"131":{"start":{"line":343,"column":6},"end":{"line":343,"column":33}},"132":{"start":{"line":343,"column":27},"end":{"line":343,"column":33}},"133":{"start":{"line":344,"column":8},"end":{"line":344,"column":69}},"134":{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},"135":{"start":{"line":346,"column":10},"end":{"line":346,"column":42}},"136":{"start":{"line":350,"column":8},"end":{"line":352,"column":9}},"137":{"start":{"line":351,"column":10},"end":{"line":351,"column":32}},"138":{"start":{"line":355,"column":6},"end":{"line":355,"column":35}},"139":{"start":{"line":369,"column":4},"end":{"line":369,"column":28}},"140":{"start":{"line":370,"column":4},"end":{"line":370,"column":30}},"141":{"start":{"line":373,"column":4},"end":{"line":375,"column":5}},"142":{"start":{"line":374,"column":6},"end":{"line":374,"column":33}},"143":{"start":{"line":378,"column":4},"end":{"line":378,"column":66}},"144":{"start":{"line":392,"column":4},"end":{"line":392,"column":17}},"145":{"start":{"line":393,"column":4},"end":{"line":393,"column":34}},"146":{"start":{"line":395,"column":4},"end":{"line":410,"column":5}},"147":{"start":{"line":396,"column":6},"end":{"line":403,"column":7}},"148":{"start":{"line":397,"column":8},"end":{"line":397,"column":34}},"149":{"start":{"line":398,"column":8},"end":{"line":400,"column":9}},"150":{"start":{"line":399,"column":10},"end":{"line":399,"column":23}},"151":{"start":{"line":402,"column":8},"end":{"line":402,"column":35}},"152":{"start":{"line":405,"column":6},"end":{"line":407,"column":7}},"153":{"start":{"line":406,"column":8},"end":{"line":406,"column":27}},"154":{"start":{"line":409,"column":6},"end":{"line":409,"column":32}},"155":{"start":{"line":412,"column":4},"end":{"line":412,"column":15}},"156":{"start":{"line":416,"column":0},"end":{"line":416,"column":27}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":15}},{"start":{"line":29,"column":19},"end":{"line":29,"column":21}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":25},"end":{"line":31,"column":34}},{"start":{"line":31,"column":38},"end":{"line":31,"column":40}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":25},"end":{"line":32,"column":39}},{"start":{"line":32,"column":43},"end":{"line":32,"column":45}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":25},"end":{"line":35,"column":42}},{"start":{"line":35,"column":46},"end":{"line":35,"column":47}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"6":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":10},"end":{"line":84,"column":32}},{"start":{"line":85,"column":10},"end":{"line":85,"column":37}},{"start":{"line":86,"column":10},"end":{"line":86,"column":44}},{"start":{"line":87,"column":10},"end":{"line":87,"column":48}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]},"8":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"12":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"13":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"14":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":10},"end":{"line":182,"column":25}},{"start":{"line":182,"column":29},"end":{"line":182,"column":71}}]},"15":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"16":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":194,"column":6}},{"start":{"line":194,"column":6},"end":{"line":194,"column":6}}]},"17":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8}}]},"18":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":6}},{"start":{"line":231,"column":6},"end":{"line":231,"column":6}}]},"19":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":14},"end":{"line":304,"column":42}},{"start":{"line":304,"column":46},"end":{"line":304,"column":68}},{"start":{"line":305,"column":9},"end":{"line":305,"column":26}},{"start":{"line":305,"column":30},"end":{"line":305,"column":64}},{"start":{"line":306,"column":9},"end":{"line":306,"column":23}},{"start":{"line":306,"column":27},"end":{"line":306,"column":58}}]},"20":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":6}},{"start":{"line":312,"column":6},"end":{"line":312,"column":6}}]},"21":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"22":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":8},"end":{"line":345,"column":8}},{"start":{"line":345,"column":8},"end":{"line":345,"column":8}}]},"23":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":8},"end":{"line":350,"column":8}},{"start":{"line":350,"column":8},"end":{"line":350,"column":8}}]},"24":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":8},"end":{"line":398,"column":8}},{"start":{"line":398,"column":8},"end":{"line":398,"column":8}}]}},"code":["var util         = require('util');","var EventEmitter = require('events').EventEmitter;","var fs           = require('fs');","var parse        = require('./parser').parse;","var Match        = require('./match');","var NodeUtils    = require('./nodeUtils');","var crypto       = require('crypto');","var stable       = require('stable');","","class Inspector extends EventEmitter {","  /**","   * Creates a new Inspector, which extends EventEmitter. filePaths is expected","   * to be an array of string paths. Also accepts an options object with any","   * combination of the following: threshold, identifiers literals, and","   * minInstances. Threshold indicates the minimum number of nodes to analyze.","   * Identifiers indicates whether or not the nodes in a match should also have","   * matching identifiers, and literals whether or not literal values should","   * match. minInstances specifies the min number of instances for a match.","   * An instance of Inspector emits the following events: start, match and end.","   *","   * @constructor","   * @extends EventEmitter","   *","   * @param {string[]} filePaths The files on which to run the inspector","   * @param {object}   [opts]    Options to set for the inspector","   */","  constructor(filePaths, opts) {","    super();","    opts = opts || {};","","    this._filePaths    = filePaths || [];","    this._threshold    = opts.threshold || 30;","    this._identifiers  = opts.identifiers;","    this._literals     = opts.literals;","    this._minInstances = opts.minInstances || 2;","    this._map          = Object.create(null);","    this._fileContents = {};","    this._traversals   = {};","    this.numFiles      = this._filePaths.length;","  }","","  /**","   * Runs the inspector on the given file paths, as provided in the constructor.","   * Emits a start event, followed by a series of match events for any detected","   * similarities, and an end event on completion.","   *","   * @fires Inspector#start","   * @fires Inspector#match","   * @fires Inspector#end","   */","  run() {","    this.emit('start');","","    // File contents are split to allow for specific line extraction","    this._filePaths.forEach((filePath) => {","      var src = fs.readFileSync(filePath, {encoding: 'utf8'});","      this._fileContents[filePath] = src.split('\\n');","      try {","        var syntaxTree = parse(src, filePath);","      } catch (err) {","        return console.error(err.message);","      }","      this._traversals[filePath] = NodeUtils.getDFSTraversal(syntaxTree);","      this._walk(syntaxTree, (nodes) => this._insert(nodes));","    });","","    this._analyze();","    this.emit('end');","  }","","  /**","   * Walks a given node's AST, building up arrays of nodes that meet the","   * inspector's threshold. When found, the callback is invoked and passed","   * the array of nodes.","   *","   * @private","   *","   * @param {Node}     node The node to traverse","   * @param {function} fn   The callback to invoke","   */","  _walk(node, fn) {","    NodeUtils.walkSubtrees(node, (node, parent, ancestors) => {","      var state = ancestors.concat(node);","      if (NodeUtils.isAMD(state) ||","          NodeUtils.isCommonJS(state) ||","          NodeUtils.isES6ModuleImport(state) ||","          NodeUtils.isES6ClassBoilerplate(state)) {","        return;","      }","","      var nodes = NodeUtils.getDFSTraversal(node, this._threshold);","      if (nodes.length === this._threshold) {","        fn(nodes);","      }","","      this._walkSiblings(node, fn);","    });","  }","","  /**","   * Walks sibling nodes under a parent, grouping their DFS traversals, and","   * invoking the callback for those that wouldn't otherwise meet the threshold.","   * Helpful for nodes like BlockStatements that hold a sequence. Note that","   * this will generate overlapping instances, and so _omitOverlappingInstances","   * helps cleanup the results.","   *","   * @private","   *","   * @param {Node}     node The node to traverse","   * @param {function} fn   The callback to invoke","   */","  _walkSiblings(parent, fn) {","    // group siblings that wouldn't otherwise meet threshold","    var children = NodeUtils.getChildren(parent);","    var n = this._threshold;","","    for (let i = 0; i < children.length - 1; i++) {","      let nodes = NodeUtils.getDFSTraversal(children[i], n);","      if (nodes.length === n) continue;","","      for (let j = i + 1; j < children.length; j++) {","        nodes = nodes.concat(NodeUtils.getDFSTraversal(children[j], n));","        if (nodes.length >= n) {","          fn(nodes.slice(0, n));","          break;","        }","      }","    }","  }","","  /**","   * Generates a key based on the combined types of each of the supplied nodes.","   * Pushes the array to another array at the generated key in _map. Nodes","   * are updated to keep a reference to all their occurrences in _map.","   *","   * @private","   *","   * @param {Node[]} nodes","   */","  _insert(nodes) {","    var key = this._getMapKey(nodes);","","    nodes.forEach(node => {","      if (!node.occurrences) {","        node.occurrences = {};","      }","      if (!node.occurrences[key]) {","        node.occurrences[key] = [];","      }","      node.occurrences[key].push(nodes);","    });","","    if (!this._map[key]) {","      this._map[key] = [];","    }","","    this._map[key].push(nodes);","  }","","  /**","   * Traverses the keys at which the various nodes are stored. A key containing","   * an array of more than a single entry indicates a potential match. The nodes","   * are then grouped if identifier matching is enabled. A match results in the","   * relevant nodes being removed from any future results. This pruning ensures","   * that we only include the greatest common parent in a set of matches.","   *","   * @private","   *","   * @fires Inspector#match","   */","  _analyze() {","    var keys = Object.keys(this._map)","      .filter(key => this._map[key].length >= this._minInstances);","","    // Need to use a stable sort to ensure parent nodes are traversed","    // before children when lengths are equal","    var sortedKeys = stable(keys, (a, b) => {","      return this._map[b].length - this._map[a].length;","    });","","    for (let key of sortedKeys) {","      if (!this._map[key] || this._map[key].length < this._minInstances) {","        continue;","      }","","      let nodeArrays = this._map[key].slice(0);","      this._omitOverlappingInstances(nodeArrays);","","      // groups will be of type Node[][][]","      let groups = [nodeArrays];","      if (this._identifiers) {","        groups = this._groupByMatchingIdentifiers(groups);","      }","      if (this._literals) {","        groups = this._groupByMatchingLiterals(groups);","      }","","      for (let i = 0; i < groups.length; i++) {","        if (groups[i].length < this._minInstances) continue;","","        this._expand(groups[i]);","        let match = new Match(groups[i]);","        match.populateLines(this._fileContents);","        this.emit('match', match);","        this._prune(groups[i]);","      }","    }","  }","","  /**","   * Removes overlapping instances from a group of node arrays. That is,","   * if one instance has nodes abcd, and another has bcde, then bcde will","   * be removed from the array.","   *","   * @private","   *","   * @param {Node[][]} nodeArrays","   */","  _omitOverlappingInstances(nodeArrays) {","    var set = new Set();","","    var hasOverlap = (nodes) => {","      return nodes.some(node => set.has(node));","    };","","    var addNodes = (nodes) => {","      nodes.forEach(node => set.add(node));","    };","","    for (let i = 0; i < nodeArrays.length; i++) {","      if (hasOverlap(nodeArrays[i])) {","        nodeArrays.splice(i--, 1);","        continue;","      } else {","        addNodes(nodeArrays[i]);","      }","    }","  }","","  /**","   * Iterates over the multi-dimensional array of nodes, and returns a new","   * array grouping them based on matching identifiers.","   *","   * @private","   *","   * @param   {Node[][][]} groups","   * @returns {Node[][][]}","   */","  _groupByMatchingIdentifiers(groups) {","    return this._group(groups, (nodes) => {","      return nodes","        .filter(node => node.name)","        .map(node => node.name)","        .join(':');","    });","  }","","  /**","   * Iterates over the multi-dimensional array of nodes, and returns a new","   * array grouping them based on matching literals.","   *","   * @private","   *","   * @param   {Node[][][]} groups","   * @returns {Node[][][]}","   */","  _groupByMatchingLiterals(groups) {","    return this._group(groups, (nodes) => {","      return nodes","        .filter(node => node.type.includes('Literal'))","        .map(node => node.value)","        .join(':');","    });","  }","","  /**","   * Expands each instance of a match to the largest common sequence of nodes","   * with the same type, and optionally identifiers. Each array of nodes is","   * modified in place.","   *","   * @private","   *","   * @param {Node[][]} nodeArrays","   */","  _expand(nodeArrays) {","    var traversals = nodeArrays.map(nodes => {","      return this._traversals[nodes[0].loc.filename];","    });","","    var positions = nodeArrays.map((nodes, i) => {","      var last = nodes[nodes.length - 1];","      return traversals[i].indexOf(last);","    });","","    var incr = (pos) => pos + 1;","    var getNode = (pos, i) => traversals[i][pos];","    var alreadyIncluded = (nodes) => {","      return nodes.some(node => {","        return nodeArrays.some(array => array.indexOf(node) !== -1)","      });","    };","","    var isComplete = (nodes) => {","      return (!NodeUtils.typesMatch(nodes) || alreadyIncluded(nodes)) ||","        (this._identifiers && !NodeUtils.identifiersMatch(nodes)) ||","        (this._literals && !NodeUtils.literalsMatch(nodes));","    };","","    while (true) {","      positions = positions.map(incr);","      let nodes = positions.map(getNode);","      if (isComplete(nodes)) return;","      nodeArrays.forEach((array, i) => array.push(nodes[i]));","    }","  }","","  /**","   * Removes the nodes from consideration in any additional matches.","   *","   * @private","   *","   * @param {Node[][]} nodeArrays","   */","  _prune(nodeArrays) {","    for (let i = 0; i < nodeArrays.length; i++) {","      let nodes = nodeArrays[i];","      for (let j = 0; j < nodes.length; j++) {","        this._removeNode(nodes[j]);","      }","    }","  }","","  /**","   * Removes all occurrences of a given node.","   *","   * @private","   *","   * @param {Node} node The node to remove","   */","  _removeNode(node) {","    for (let key in node.occurrences) {","      for (let i = 0; i < node.occurrences[key].length; i++) {","      if (!this._map[key]) break;","        let index = this._map[key].indexOf(node.occurrences[key][i]);","        if (index > -1) {","          this._map[key].splice(index, 1);","        }","","        // Delete empty buckets","        if (!this._map[key].length) {","          delete this._map[key];","        }","      }","","      delete node.occurrences[key];","    }","  }","","  /**","   * Generates a key based on the type of each of the passed nodes, returned","   * as a base64-encoded sha1 hash.","   *","   * @private","   *","   * @param   {Node[]} nodes The nodes for which to generate the key","   * @returns {string}","   */","  _getMapKey(nodes) {","    var key = nodes[0].type;","    var length = nodes.length;","","    // Significantly faster than a map & join","    for (var i = 1; i < length; i++) {","      key += ':' + nodes[i].type;","    }","","    // Prefer shorter key lengths (base64 < hex)","    return crypto.createHash('sha1').update(key).digest('base64');","  }","","  /**","   * Accepts a multi-dimensional array of nodes and groups them based on the","   * supplied function, which is expected to return a string.","   *","   * @private","   *","   * @param   {Node[][][]} groups The groups of nodes to further group","   * @param   {function}   fn     Synchronous function for generating group ids","   * @returns {Node[][][]}","   */","  _group(groups, fn) {","    var res = [];","    var map = Object.create(null);","","    for (let i = 0; i < groups.length; i++) {","      for (let j = 0; j < groups[i].length; j++) {","        let id = fn(groups[i][j]);","        if (!map[id]) {","          map[id] = [];","        }","","        map[id].push(groups[i][j]);","      }","","      for (let key in map) {","        res.push(map[key]);","      }","","      map = Object.create(null);","    }","","    return res;","  }","}","","module.exports = Inspector;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"67":0,"68":0,"82":0,"83":0,"84":0,"88":0,"91":0,"92":0,"93":0,"96":0,"114":0,"115":0,"117":0,"118":0,"119":0,"121":0,"122":0,"123":0,"124":0,"125":0,"141":0,"143":0,"144":0,"145":0,"147":0,"148":0,"150":0,"153":0,"154":0,"157":0,"172":0,"173":0,"177":0,"178":0,"181":0,"182":0,"183":0,"186":0,"187":0,"190":0,"191":0,"192":0,"194":0,"195":0,"198":0,"199":0,"201":0,"202":0,"203":0,"204":0,"205":0,"220":0,"222":0,"223":0,"226":0,"227":0,"230":0,"231":0,"232":0,"233":0,"235":0,"250":0,"251":0,"252":0,"253":0,"268":0,"269":0,"270":0,"271":0,"286":0,"287":0,"290":0,"291":0,"292":0,"295":0,"296":0,"297":0,"298":0,"299":0,"303":0,"304":0,"309":0,"310":0,"311":0,"312":0,"313":0,"325":0,"326":0,"327":0,"328":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"350":0,"351":0,"355":0,"369":0,"370":0,"373":0,"374":0,"378":0,"392":0,"393":0,"395":0,"396":0,"397":0,"398":0,"399":0,"402":0,"405":0,"406":0,"409":0,"412":0,"416":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/parser.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":40}}},"2":{"name":"attempt","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}}},"3":{"name":"_parse","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":43}}},"4":{"name":"getErrorContext","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":12,"column":0},"end":{"line":23,"column":2}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":31}},"5":{"start":{"line":14,"column":2},"end":{"line":22,"column":3}},"6":{"start":{"line":15,"column":4},"end":{"line":18,"column":6}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":43}},"8":{"start":{"line":17,"column":12},"end":{"line":17,"column":43}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":40}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":72}},"11":{"start":{"line":25,"column":0},"end":{"line":33,"column":1}},"12":{"start":{"line":26,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":28,"column":6},"end":{"line":28,"column":22}},"15":{"start":{"line":30,"column":6},"end":{"line":30,"column":42}},"16":{"start":{"line":30,"column":32},"end":{"line":30,"column":42}},"17":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"18":{"start":{"line":36,"column":2},"end":{"line":44,"column":13}},"19":{"start":{"line":47,"column":0},"end":{"line":54,"column":1}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":68}},"21":{"start":{"line":48,"column":58},"end":{"line":48,"column":68}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":47}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":47}},"24":{"start":{"line":53,"column":2},"end":{"line":53,"column":31}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":14}},{"start":{"line":48,"column":18},"end":{"line":48,"column":31}},{"start":{"line":48,"column":35},"end":{"line":48,"column":56}}]}},"code":["var babylon = require('babylon');","var debug   = require('./debug');","","/**"," * Parses the specified src string with babylon, returning the resulting AST"," * and skipping the undocumented File root node, which is neither Babylon AST"," * nor ESTree spec compliant."," *"," * @param {string} src      Source to parse"," * @param {string} filePath Path to the file"," */","exports.parse = function(src, filePath) {","  debug(`parsing ${filePath}`);","  try {","    return attempt(","      () => _parse(src, filePath, 'script'),","      () => _parse(src, filePath, 'module')","    );","  } catch (err) {","    let ctx = getErrorContext(err, src);","    throw new Error(`Couldn't parse ${filePath}: ${err.message}${ctx}`);","  }","};","","function attempt(...fns) {","  for (let i = 0; i < fns.length; i++) {","    try {","      return fns[i]();","    } catch (err) {","      if (i === fns.length - 1) throw err;","    }","  }","}","","function _parse(src, filePath, sourceType) {","  return babylon.parse(src, {","    allowReturnOutsideFunction: true,","    allowImportExportEverywhere: true,","    sourceType: sourceType,","    sourceFilename: filePath,","    plugins: ['jsx', 'flow', 'doExpressions', 'objectRestSpread', 'decorators',","      'classProperties', 'exportExtensions', 'asyncGenerators', 'functionBind',","      'functionSent', 'dynamicImport']","  }).program;","}","","function getErrorContext(err, src) {","  if (!err.loc || !err.loc.line || err.loc.column >= 100) return '';","","  var line = src.split('\\n')[err.loc.line - 1];","  var caret = ' '.repeat(err.loc.column) + '^';","","  return `\\n${line}\\n${caret}`;","}",""],"l":{"1":1,"2":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"20":0,"21":0,"25":1,"26":0,"27":0,"28":0,"30":0,"35":1,"36":0,"47":1,"48":0,"50":0,"51":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/debug.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/debug.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"debug","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":23}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]}},"code":["module.exports = function debug(str) {","  if (process.env.DEBUG) {","    console.error(str);","  }","};",""],"l":{"1":1,"2":0,"3":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/match.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/match.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":26}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":31}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":10},"end":{"line":42,"column":23}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":42}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":57}},"6":{"start":{"line":25,"column":4},"end":{"line":31,"column":7}},"7":{"start":{"line":26,"column":6},"end":{"line":28,"column":20}},"8":{"start":{"line":30,"column":6},"end":{"line":30,"column":36}},"9":{"start":{"line":43,"column":4},"end":{"line":46,"column":17}},"10":{"start":{"line":44,"column":24},"end":{"line":44,"column":35}},"11":{"start":{"line":45,"column":19},"end":{"line":45,"column":41}},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":63}},"13":{"start":{"line":63,"column":4},"end":{"line":87,"column":7}},"14":{"start":{"line":64,"column":6},"end":{"line":64,"column":43}},"15":{"start":{"line":66,"column":6},"end":{"line":68,"column":19}},"16":{"start":{"line":67,"column":8},"end":{"line":67,"column":58}},"17":{"start":{"line":73,"column":6},"end":{"line":74,"column":68}},"18":{"start":{"line":73,"column":35},"end":{"line":73,"column":49}},"19":{"start":{"line":74,"column":31},"end":{"line":74,"column":66}},"20":{"start":{"line":76,"column":6},"end":{"line":76,"column":41}},"21":{"start":{"line":77,"column":6},"end":{"line":77,"column":33}},"22":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"23":{"start":{"line":79,"column":8},"end":{"line":79,"column":23}},"24":{"start":{"line":82,"column":6},"end":{"line":83,"column":68}},"25":{"start":{"line":82,"column":37},"end":{"line":82,"column":49}},"26":{"start":{"line":83,"column":31},"end":{"line":83,"column":66}},"27":{"start":{"line":84,"column":6},"end":{"line":84,"column":61}},"28":{"start":{"line":86,"column":6},"end":{"line":86,"column":36}},"29":{"start":{"line":91,"column":0},"end":{"line":91,"column":23}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":19},"end":{"line":45,"column":28}},{"start":{"line":45,"column":32},"end":{"line":45,"column":41}}]},"2":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":47},"end":{"line":67,"column":51}},{"start":{"line":67,"column":54},"end":{"line":67,"column":57}}]},"3":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":56},"end":{"line":74,"column":59}},{"start":{"line":74,"column":62},"end":{"line":74,"column":66}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":10},"end":{"line":78,"column":34}},{"start":{"line":78,"column":38},"end":{"line":78,"column":73}}]},"6":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":56},"end":{"line":83,"column":59}},{"start":{"line":83,"column":62},"end":{"line":83,"column":66}}]},"7":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":47},"end":{"line":84,"column":53}},{"start":{"line":84,"column":56},"end":{"line":84,"column":60}}]}},"code":["var strip     = require('strip-indent');","var crypto    = require('crypto');","var NodeUtils = require('./nodeUtils');","","class Match {","  /**","   * Creates a new Match.","   *","   * @constructor","   *","   * @param {Node[][]} nodeArrays Multi-dimensional array of nodes","   */","  constructor(nodeArrays) {","    this.hash = this._getHash(nodeArrays);","    this.instances = this._generateInstances(nodeArrays);","  }","","  /**","   * Populates each match instance with a lines property containing the","   * relevant source code lines.","   *","   * @param {object} fileContents The file paths and their contents","   */","   populateLines(fileContents) {","    this.instances.forEach(instance => {","      var lines = fileContents[instance.filename]","        .slice(instance.start.line - 1, instance.end.line)","        .join('\\n');","","      instance.lines = strip(lines);","    });","   }","","  /**","   * Generates a hash for a match.","   *","   * @private","   *","   * @param   {Node[][]} nodeArrays   Multi-dimensional array of nodes","   * @returns {String}","   */","  _getHash(nodeArrays) {","    var str = nodeArrays","      .reduce((a, b) => a.concat(b))","      .map(node => node.name || node.type)","      .join(':');","","    return crypto.createHash('sha1').update(str).digest('hex');","  }","","  /**","   * Returns an array of objects containing the filename, start, end, and","   * lines associated with all instances of a match. Due to sibling traversal,","   * the end line must be searched for among the nodes, and isn't always","   * defined by the last node in the array.","   *","   * @private","   *","   * @param   {Node[][]} nodeArrays   Multi-dimensional array of nodes","   * @returns {object}","   */","  _generateInstances(nodeArrays) {","    return nodeArrays.map((nodes) => {","      var filename = nodes[0].loc.filename;","","      var start = nodes.reduce((res, curr) => {","        return NodeUtils.isBefore(curr, res) ? curr : res;","      }).loc.start;","","      // The end line requires more careful approximation so as not to","      // accidentally include a large number of irrelevant src lines","      // from a large node","      var base = nodes.map(node => node.loc.start)","        .reduce((res, curr) => (res.line > curr.line) ? res : curr);","","      var last = nodes[nodes.length - 1];","      var lastEnd = last.loc.end;","      if (lastEnd.line > base.line && !NodeUtils.getChildren(last).length) {","        base = lastEnd;","      }","","      var maxEnd = nodes.map(node => node.loc.end)","        .reduce((res, curr) => (res.line > curr.line) ? res : curr);","      var end = maxEnd.line - base.line <= 2 ? maxEnd : base;","","      return {filename, start, end};","    });","  }","}","","module.exports = Match;",""],"l":{"1":1,"2":1,"3":1,"14":0,"15":0,"25":0,"26":0,"30":0,"43":0,"44":0,"45":0,"48":0,"63":0,"64":0,"66":0,"67":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"82":0,"83":0,"84":0,"86":0,"91":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/nodeUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/nodeUtils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":32}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":24},"end":{"line":47,"column":34}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":24},"end":{"line":70,"column":34}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":20},"end":{"line":98,"column":27}}},"5":{"name":"(anonymous_5)","line":133,"loc":{"start":{"line":133,"column":17},"end":{"line":133,"column":24}}},"6":{"name":"(anonymous_6)","line":145,"loc":{"start":{"line":145,"column":26},"end":{"line":145,"column":34}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":155,"column":30},"end":{"line":155,"column":38}}},"8":{"name":"(anonymous_8)","line":167,"loc":{"start":{"line":167,"column":14},"end":{"line":167,"column":22}}},"9":{"name":"(anonymous_9)","line":168,"loc":{"start":{"line":168,"column":21},"end":{"line":168,"column":36}}},"10":{"name":"(anonymous_10)","line":201,"loc":{"start":{"line":201,"column":19},"end":{"line":201,"column":27}}},"11":{"name":"(anonymous_11)","line":230,"loc":{"start":{"line":230,"column":19},"end":{"line":230,"column":27}}},"12":{"name":"(anonymous_12)","line":240,"loc":{"start":{"line":240,"column":25},"end":{"line":240,"column":33}}},"13":{"name":"(anonymous_13)","line":252,"loc":{"start":{"line":252,"column":22},"end":{"line":252,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":25,"column":4},"end":{"line":31,"column":6}},"4":{"start":{"line":26,"column":6},"end":{"line":26,"column":34}},"5":{"start":{"line":27,"column":6},"end":{"line":27,"column":41}},"6":{"start":{"line":28,"column":6},"end":{"line":30,"column":9}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"8":{"start":{"line":33,"column":4},"end":{"line":35,"column":7}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":29}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":17}},"11":{"start":{"line":50,"column":4},"end":{"line":54,"column":6}},"12":{"start":{"line":51,"column":6},"end":{"line":51,"column":39}},"13":{"start":{"line":51,"column":32},"end":{"line":51,"column":39}},"14":{"start":{"line":52,"column":6},"end":{"line":52,"column":21}},"15":{"start":{"line":53,"column":6},"end":{"line":53,"column":47}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":14}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":27}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":23}},"19":{"start":{"line":72,"column":4},"end":{"line":72,"column":21}},"20":{"start":{"line":74,"column":4},"end":{"line":86,"column":5}},"21":{"start":{"line":75,"column":6},"end":{"line":75,"column":27}},"22":{"start":{"line":77,"column":6},"end":{"line":79,"column":7}},"23":{"start":{"line":78,"column":8},"end":{"line":78,"column":31}},"24":{"start":{"line":81,"column":6},"end":{"line":81,"column":55}},"25":{"start":{"line":82,"column":6},"end":{"line":85,"column":7}},"26":{"start":{"line":83,"column":8},"end":{"line":83,"column":32}},"27":{"start":{"line":84,"column":8},"end":{"line":84,"column":30}},"28":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"29":{"start":{"line":99,"column":4},"end":{"line":99,"column":17}},"30":{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},"31":{"start":{"line":102,"column":6},"end":{"line":104,"column":9}},"32":{"start":{"line":103,"column":8},"end":{"line":103,"column":62}},"33":{"start":{"line":109,"column":4},"end":{"line":111,"column":7}},"34":{"start":{"line":109,"column":35},"end":{"line":111,"column":6}},"35":{"start":{"line":110,"column":6},"end":{"line":110,"column":68}},"36":{"start":{"line":113,"column":4},"end":{"line":120,"column":7}},"37":{"start":{"line":114,"column":6},"end":{"line":114,"column":26}},"38":{"start":{"line":115,"column":6},"end":{"line":119,"column":7}},"39":{"start":{"line":116,"column":8},"end":{"line":116,"column":22}},"40":{"start":{"line":117,"column":13},"end":{"line":119,"column":7}},"41":{"start":{"line":118,"column":8},"end":{"line":118,"column":45}},"42":{"start":{"line":122,"column":4},"end":{"line":122,"column":15}},"43":{"start":{"line":134,"column":4},"end":{"line":134,"column":20}},"44":{"start":{"line":135,"column":4},"end":{"line":135,"column":20}},"45":{"start":{"line":136,"column":4},"end":{"line":136,"column":73}},"46":{"start":{"line":146,"column":4},"end":{"line":146,"column":61}},"47":{"start":{"line":156,"column":4},"end":{"line":156,"column":39}},"48":{"start":{"line":157,"column":4},"end":{"line":157,"column":73}},"49":{"start":{"line":168,"column":4},"end":{"line":171,"column":5}},"50":{"start":{"line":169,"column":6},"end":{"line":169,"column":38}},"51":{"start":{"line":169,"column":31},"end":{"line":169,"column":38}},"52":{"start":{"line":170,"column":6},"end":{"line":170,"column":65}},"53":{"start":{"line":174,"column":4},"end":{"line":190,"column":5}},"54":{"start":{"line":175,"column":6},"end":{"line":180,"column":7}},"55":{"start":{"line":176,"column":8},"end":{"line":176,"column":21}},"56":{"start":{"line":177,"column":13},"end":{"line":180,"column":7}},"57":{"start":{"line":179,"column":8},"end":{"line":179,"column":17}},"58":{"start":{"line":183,"column":6},"end":{"line":183,"column":46}},"59":{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},"60":{"start":{"line":185,"column":8},"end":{"line":185,"column":20}},"61":{"start":{"line":186,"column":13},"end":{"line":189,"column":7}},"62":{"start":{"line":188,"column":8},"end":{"line":188,"column":20}},"63":{"start":{"line":192,"column":4},"end":{"line":192,"column":17}},"64":{"start":{"line":202,"column":4},"end":{"line":219,"column":5}},"65":{"start":{"line":203,"column":6},"end":{"line":203,"column":19}},"66":{"start":{"line":204,"column":11},"end":{"line":219,"column":5}},"67":{"start":{"line":207,"column":6},"end":{"line":207,"column":18}},"68":{"start":{"line":208,"column":11},"end":{"line":219,"column":5}},"69":{"start":{"line":209,"column":6},"end":{"line":218,"column":7}},"70":{"start":{"line":210,"column":8},"end":{"line":210,"column":51}},"71":{"start":{"line":212,"column":8},"end":{"line":217,"column":9}},"72":{"start":{"line":216,"column":10},"end":{"line":216,"column":22}},"73":{"start":{"line":221,"column":4},"end":{"line":221,"column":17}},"74":{"start":{"line":231,"column":4},"end":{"line":231,"column":68}},"75":{"start":{"line":231,"column":31},"end":{"line":231,"column":66}},"76":{"start":{"line":241,"column":4},"end":{"line":243,"column":7}},"77":{"start":{"line":242,"column":6},"end":{"line":242,"column":49}},"78":{"start":{"line":253,"column":4},"end":{"line":255,"column":5}},"79":{"start":{"line":254,"column":6},"end":{"line":254,"column":70}},"80":{"start":{"line":257,"column":4},"end":{"line":259,"column":7}},"81":{"start":{"line":258,"column":6},"end":{"line":258,"column":73}},"82":{"start":{"line":263,"column":0},"end":{"line":263,"column":27}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":10},"end":{"line":51,"column":11}},{"start":{"line":51,"column":15},"end":{"line":51,"column":30}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"4":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":10},"end":{"line":77,"column":11}},{"start":{"line":77,"column":15},"end":{"line":77,"column":30}}]},"5":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":21},"end":{"line":81,"column":48}},{"start":{"line":81,"column":52},"end":{"line":81,"column":54}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"7":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":15},"end":{"line":103,"column":28}},{"start":{"line":103,"column":32},"end":{"line":103,"column":61}}]},"8":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":13},"end":{"line":110,"column":17}},{"start":{"line":110,"column":22},"end":{"line":110,"column":45}},{"start":{"line":110,"column":49},"end":{"line":110,"column":66}}]},"9":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"10":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":10},"end":{"line":115,"column":13}},{"start":{"line":115,"column":17},"end":{"line":115,"column":25}}]},"11":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":13},"end":{"line":117,"column":13}},{"start":{"line":117,"column":13},"end":{"line":117,"column":13}}]},"12":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":11},"end":{"line":136,"column":26}},{"start":{"line":136,"column":31},"end":{"line":136,"column":48}},{"start":{"line":136,"column":52},"end":{"line":136,"column":71}}]},"13":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":11},"end":{"line":146,"column":19}},{"start":{"line":146,"column":23},"end":{"line":146,"column":60}}]},"14":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":43}},{"start":{"line":157,"column":47},"end":{"line":157,"column":72}}]},"15":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":10},"end":{"line":169,"column":15}},{"start":{"line":169,"column":19},"end":{"line":169,"column":29}}]},"17":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":14},"end":{"line":170,"column":36}},{"start":{"line":170,"column":40},"end":{"line":170,"column":63}}]},"18":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"19":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":13},"end":{"line":177,"column":13}},{"start":{"line":177,"column":13},"end":{"line":177,"column":13}}]},"20":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":17},"end":{"line":177,"column":56}},{"start":{"line":178,"column":10},"end":{"line":178,"column":55}}]},"21":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"22":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":13},"end":{"line":186,"column":13}},{"start":{"line":186,"column":13},"end":{"line":186,"column":13}}]},"23":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":17},"end":{"line":186,"column":51}},{"start":{"line":187,"column":10},"end":{"line":187,"column":37}}]},"24":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"25":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":11},"end":{"line":204,"column":11}},{"start":{"line":204,"column":11},"end":{"line":204,"column":11}}]},"26":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":15},"end":{"line":204,"column":54}},{"start":{"line":205,"column":8},"end":{"line":205,"column":53}},{"start":{"line":206,"column":8},"end":{"line":206,"column":53}}]},"27":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":11},"end":{"line":208,"column":11}},{"start":{"line":208,"column":11},"end":{"line":208,"column":11}}]},"28":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":15},"end":{"line":208,"column":54}},{"start":{"line":208,"column":58},"end":{"line":208,"column":79}}]},"29":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":212,"column":8}},{"start":{"line":212,"column":8},"end":{"line":212,"column":8}}]},"30":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":12},"end":{"line":212,"column":53}},{"start":{"line":213,"column":12},"end":{"line":213,"column":28}},{"start":{"line":214,"column":12},"end":{"line":214,"column":54}},{"start":{"line":215,"column":12},"end":{"line":215,"column":54}}]},"31":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":31},"end":{"line":231,"column":35}},{"start":{"line":231,"column":39},"end":{"line":231,"column":66}}]},"32":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":11},"end":{"line":241,"column":19}},{"start":{"line":241,"column":23},"end":{"line":243,"column":6}}]},"33":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":13},"end":{"line":242,"column":17}},{"start":{"line":242,"column":21},"end":{"line":242,"column":48}}]},"34":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":13},"end":{"line":254,"column":42}},{"start":{"line":254,"column":46},"end":{"line":254,"column":69}}]},"35":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":11},"end":{"line":257,"column":19}},{"start":{"line":257,"column":23},"end":{"line":259,"column":6}}]},"36":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":13},"end":{"line":258,"column":17}},{"start":{"line":258,"column":22},"end":{"line":258,"column":38}},{"start":{"line":258,"column":42},"end":{"line":258,"column":71}}]}},"code":["var stable = require('stable');","","/**"," * Cache for getChildren, holding the keys to traverse for a given Node type."," * Some JSX node types are hardcoded to ensure correct property traversal order."," * For example, this ensures that a JSXElement's children are traversed prior"," * to the closing element."," */","var childKeys = {","  JSXElement: ['openingElement', 'extra', 'children', 'closingElement'],","  JSXOpeningElement: ['name', 'attributes'],","  JSXAttribute: ['name', 'value'],","};","","class NodeUtils {","  /**","   * Walks a root node's subtrees using DFS, invoking the passed callback with","   * three args: node, parent, and ancestors. The root node, presumably Program,","   * is ignored.","   *","   * @param {Node}     root The root node of the AST to traverse","   * @param {function} fn   Callback to invoke","   */","  static walkSubtrees(root, fn) {","    var visit = (node, parent, ancestors) => {","      fn(node, parent, ancestors);","      ancestors = ancestors.concat(node);","      NodeUtils.getChildren(node).forEach((child) => {","        visit(child, node, ancestors);","      });","    };","","    NodeUtils.getChildren(root).forEach((child) => {","      visit(child, null, []);","    });","  }","","  /**","   * Returns an array of nodes in the passed AST, traversed using DFS. Accepts","   * an optional maximum number, n, of nodes to return. The returned array","   * always begins with the root node.","   *","   * @param   {Node}   node The root node of the AST to traverse","   * @param   {int}    [n]  Optional max number of nodes to return","   * @returns {Node[]}","   */","  static getDFSTraversal(node, n) {","    var res = [];","","    var dfs = (node) => {","      if (n && res.length >= n) return;","      res.push(node);","      NodeUtils.getChildren(node).forEach(dfs);","    };","","    dfs(node);","","    return res.slice(0, n);","  }","","  /**","   * Returns an array of nodes in the passed AST, traversed using BFS. Accepts","   * an optional maximum number, n, of nodes to return. The returned array","   * always begins with the root node.","   *","   * @param   {Node}   node The root node of the AST to traverse","   * @param   {int}    [n]  Optional max number of nodes to return","   * @returns {Node[]}","   */","  static getBFSTraversal(node, n) {","    var queue = [node];","    var res = [node];","","    while (queue.length) {","      node = queue.shift();","","      if (n && res.length >= n) {","        return res.slice(0, n);","      }","","      let children = NodeUtils.getChildren(node) || [];","      for (let i = 0; i < children.length; i++) {","        queue.push(children[i]);","        res.push(children[i]);","      }","    }","","    return res.slice(0, n);","  }","","  /**","   * Returns a given node's children as an array of nodes. Designed for use","   * with ESTree/Babylon spec ASTs.","   *","   * @param   {Node}   The node for which to retrieve its children","   * @returns {Node[]} An array of child nodes","   */","  static getChildren(node) {","    var res = [];","","    if (!childKeys[node.type]) {","      childKeys[node.type] = Object.keys(node).filter((key) => {","        return key !== 'loc' && typeof node[key] === 'object';","      });","    }","","    // Ignore null values, as well as JSText nodes incorrectly generated","    // by babylon that contain only newlines and spaces","    var filterIgnored = (nodes) => nodes.filter(node => {","      return node && (node.type !== 'JSXText' || node.value.trim());","    });","","    childKeys[node.type].forEach((key) => {","      var val = node[key];","      if (val && val.type) {","        res.push(val);","      } else if (val instanceof Array) {","        res = res.concat(filterIgnored(val));","      }","    });","","    return res;","  }","","  /**","   * Returns whether or not the first node appears before the second, by","   * comparing both their starting lines and columns.","   *","   * @param   {object} a","   * @param   {object} b","   * @returns {bool}","   */","  static isBefore(a, b) {","    a = a.loc.start;","    b = b.loc.start;","    return a.line < b.line || (a.line === b.line && a.column < b.column);","  }","","  /**","   * Returns whether or not the nodes are part of an ES6 module import.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static isES6ModuleImport(nodes) {","    return nodes[0] && nodes[0].type === 'ImportDeclaration';","  }","","  /**","   * Returns whether or not the nodes belong to class boilerplate.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static isES6ClassBoilerplate(nodes) {","    var last = nodes[nodes.length - 1];","    return last.type === 'ClassDeclaration' || last.type === 'ClassBody';","  }","","  /**","   * Returns whether or not the nodes are part of an AMD require or define","   * expression.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static isAMD(nodes) {","    var hasAMDName = function(node) {","      if (!node || !node.name) return;","      return (node.name === 'define' || node.name === 'require');","    }","","    // Iterate from last node","    for (let i = nodes.length - 1; i >= nodes.length - 5; i--) {","      if (!nodes[i]) {","        return false;","      } else if (nodes[i].type !== 'ExpressionStatement' ||","          nodes[i].expression.type !== 'CallExpression') {","        continue;","      }","","      // Handle basic cases where define/require are a property","      let callee = nodes[i].expression.callee;","      if (hasAMDName(callee)) {","        return true;","      } else if (callee.type === 'MemberExpression' &&","          hasAMDName(callee.property)) {","        return true;","      }","    }","","    return false;","  }","","  /**","   * Returns whether or not the nodes are part of a CommonJS require statement.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static isCommonJS(nodes) {","    if (!nodes[0]) {","      return false;","    } else if (nodes[0].type === 'ExpressionStatement' &&","        nodes[0].expression.type === 'CallExpression' &&","        nodes[0].expression.callee.name === 'require') {","      return true;","    } else if (nodes[0].type === 'VariableDeclaration' && nodes[0].declarations) {","      for (let j = 0; j < nodes[0].declarations.length; j++) {","        let declaration = nodes[0].declarations[j];","","        if (declaration.type === 'VariableDeclarator' &&","            declaration.init &&","            declaration.init.type === 'CallExpression' &&","            declaration.init.callee.name === 'require') {","          return true;","        }","      }","    }","","    return false;","  }","","  /**","   * Returns whether or not all nodes are of the same type.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static typesMatch(nodes) {","    return nodes.every(node => node && node.type === nodes[0].type);","  }","","  /**","   * Returns whether or not all nodes have the same identifier.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static identifiersMatch(nodes) {","    return nodes[0] && nodes.every(node => {","      return node && node.name === nodes[0].name;","    });","  }","","  /**","   * Returns whether or not all nodes have the same literal value.","   *","   * @param   {Node[]}  nodes","   * @returns {boolean}","   */","  static literalsMatch(nodes) {","    var isLiteral = (node) => {","      return node.type.includes('Literal') || node.type === 'JSXText';","    }","","    return nodes[0] && nodes.every(node => {","      return node && (!isLiteral(node) || node.value === nodes[0].value);","    });","  }","}","","module.exports = NodeUtils;",""],"l":{"1":1,"9":1,"25":0,"26":0,"27":0,"28":0,"29":0,"33":0,"34":0,"48":0,"50":0,"51":0,"52":0,"53":0,"56":0,"58":0,"71":0,"72":0,"74":0,"75":0,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"88":0,"99":0,"101":0,"102":0,"103":0,"109":0,"110":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"122":0,"134":0,"135":0,"136":0,"146":0,"156":0,"157":0,"168":0,"169":0,"170":0,"174":0,"175":0,"176":0,"177":0,"179":0,"183":0,"184":0,"185":0,"186":0,"188":0,"192":0,"202":0,"203":0,"204":0,"207":0,"208":0,"209":0,"210":0,"212":0,"216":0,"221":0,"231":0,"241":0,"242":0,"253":0,"254":0,"257":0,"258":0,"263":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}}},"branchMap":{},"code":["module.exports = {","  default: require('./default.js'),","  json:    require('./json.js'),","  pmd:     require('./pmd.js')","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/default.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/default.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":31}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":22}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":27}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":36}},"8":{"start":{"line":33,"column":4},"end":{"line":34,"column":60}},"9":{"start":{"line":36,"column":4},"end":{"line":40,"column":7}},"10":{"start":{"line":37,"column":6},"end":{"line":37,"column":58}},"11":{"start":{"line":38,"column":6},"end":{"line":38,"column":43}},"12":{"start":{"line":39,"column":6},"end":{"line":39,"column":56}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":18}},"14":{"start":{"line":46,"column":0},"end":{"line":46,"column":33}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":21}}]}},"code":["var util         = require('util');","var chalk        = require('chalk');","var BaseReporter = require('./base');","","class DefaultReporter extends BaseReporter {","  /**","   * The default reporter, which displays both file and line information for","   * each given match.","   *","   * @constructor","   *","   * @param {Inspector} inspector Instance on which to register its listeners","   * @param {object}    opts      Options to set for the reporter","   */","  constructor(inspector, opts) {","    opts = opts || {};","    super(inspector, opts);","    this._registerSummary();","  }","","  /**","   * Returns the string output to print for the given reporter. The string","   * contains the number of instances associated with the match and the files","   * and lines involved.","   *","   * @private","   *","   * @param   {Match}  match The inspector match to output","   * @returns {string} The formatted output","   */","  _getOutput(match) {","    var instances = match.instances;","    var output = '\\n' + '-'.repeat(60) + '\\n\\n' +","      chalk.bold(`Match - ${instances.length} instances\\n`);","","    instances.forEach((instance) => {","      var location = this._getFormattedLocation(instance);","      var lines = this._getLines(instance);","      output += `\\n${location}\\n${chalk.grey(lines)}\\n`;","    });","","    return output;","  }","}","","module.exports = DefaultReporter;",""],"l":{"1":1,"2":1,"3":1,"16":0,"17":0,"18":0,"32":0,"33":0,"36":0,"37":0,"38":0,"39":0,"42":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/base.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/base.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":31}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":22}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":18},"end":{"line":48,"column":21}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":23},"end":{"line":74,"column":34}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":11},"end":{"line":85,"column":22}}},"6":{"name":"(anonymous_6)","line":100,"loc":{"start":{"line":100,"column":18},"end":{"line":100,"column":29}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":18},"end":{"line":114,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":22}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":32}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":72}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":65}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":29}},"10":{"start":{"line":24,"column":4},"end":{"line":29,"column":7}},"11":{"start":{"line":25,"column":6},"end":{"line":25,"column":58}},"12":{"start":{"line":25,"column":51},"end":{"line":25,"column":58}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":57}},"14":{"start":{"line":28,"column":29},"end":{"line":28,"column":55}},"15":{"start":{"line":38,"column":4},"end":{"line":41,"column":7}},"16":{"start":{"line":39,"column":6},"end":{"line":39,"column":20}},"17":{"start":{"line":40,"column":6},"end":{"line":40,"column":57}},"18":{"start":{"line":49,"column":4},"end":{"line":64,"column":7}},"19":{"start":{"line":50,"column":6},"end":{"line":50,"column":46}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":52}},"21":{"start":{"line":52,"column":6},"end":{"line":52,"column":60}},"22":{"start":{"line":53,"column":6},"end":{"line":53,"column":18}},"23":{"start":{"line":55,"column":6},"end":{"line":61,"column":7}},"24":{"start":{"line":56,"column":8},"end":{"line":57,"column":63}},"25":{"start":{"line":59,"column":8},"end":{"line":60,"column":50}},"26":{"start":{"line":63,"column":6},"end":{"line":63,"column":49}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":60}},"28":{"start":{"line":76,"column":4},"end":{"line":76,"column":69}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":31}},"30":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"31":{"start":{"line":88,"column":6},"end":{"line":88,"column":68}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":17}},"33":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"34":{"start":{"line":102,"column":6},"end":{"line":102,"column":56}},"35":{"start":{"line":105,"column":4},"end":{"line":105,"column":20}},"36":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"37":{"start":{"line":116,"column":6},"end":{"line":116,"column":55}},"38":{"start":{"line":119,"column":4},"end":{"line":119,"column":20}},"39":{"start":{"line":123,"column":0},"end":{"line":123,"column":30}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":15}},{"start":{"line":16,"column":19},"end":{"line":16,"column":21}}]},"2":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":45},"end":{"line":20,"column":46}},{"start":{"line":20,"column":50},"end":{"line":20,"column":70}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":50},"end":{"line":20,"column":63}},{"start":{"line":20,"column":67},"end":{"line":20,"column":70}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":27},"end":{"line":21,"column":46}},{"start":{"line":21,"column":50},"end":{"line":21,"column":64}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"6":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":35},"end":{"line":51,"column":42}},{"start":{"line":51,"column":45},"end":{"line":51,"column":51}}]},"7":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":40},"end":{"line":52,"column":49}},{"start":{"line":52,"column":52},"end":{"line":52,"column":59}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"9":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"10":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]}},"code":["var util  = require('util');","var path  = require('path');","var chalk = require('chalk');","","class BaseReporter {","  /**","   * A base reporter from which all others inherit. Registers a listener on the","   * passed inspector instance for tracking the number of matches found.","   *","   * @constructor","   *","   * @param {Inspector} inspector Instance on which to register its listeners","   * @param {object}    opts      Options to set for the reporter","   */","  constructor(inspector, opts) {","    opts = opts || {};","","    this._inspector = inspector;","    this._found = 0;","    this._truncate = (opts.truncate === 0) ? 0 : (opts.truncate || 100);","    this._writableStream = opts.writableStream || process.stdout;","    this._registerListener();","","    inspector.on('end', () => {","      if (this._writableStream === process.stdout) return;","      // give the reporter a chance to write its last chunk by","      // deferring end to the next tick","      process.nextTick(() => this._writableStream.end());","    });","  }","","  /**","   * Registers a listener to the \"match\" event exposed by the Inspector","   * instance. Increments _found for each match emitted, and invokes the","   * object's _getOutput method, writing it to stdout.","   */","  _registerListener() {","    this._inspector.on('match', (match) => {","      this._found++;","      this._writableStream.write(this._getOutput(match));","    });","  }","","  /**","   * Registers a listener that prints a final summary outlining the number of","   * matches detected, as well as the number of files analyzed.","   */","  _registerSummary() {","    this._inspector.on('end', () => {","      var numFiles = this._inspector.numFiles;","      var files = (numFiles > 1) ? 'files' : 'file';","      var matches = (this._found > 1) ? 'matches' : 'match';","      var summary;","","      if (!this._found) {","        summary = chalk.green(util.format(","          '\\nNo matches found across %d %s', numFiles, files));","      } else {","        summary = chalk.red(util.format('\\n%d %s found across %d %s',","          this._found, matches, numFiles, files));","      }","","      this._writableStream.write(summary + '\\n');","    });","  }","","  /**","   * Returns a string containing the path to the file in which the nodes are","   * located, as well as the lines on which the nodes exist.","   *","   * @param   {Object} instance","   * @returns {string}","   */","  _getFormattedLocation(instance) {","    var filePath = this._getRelativePath(instance.filename);","    return `${filePath}:${instance.start.line},${instance.end.line}`;","  }","","  /**","   * Returns the lines associated with an instance.","   *","   * @param   {Object} instance","   * @returns {string}","   */","  _getLines(instance) {","    var lines = instance.lines;","    if (this._truncate) {","      lines = lines.split('\\n').slice(0, this._truncate).join('\\n');","    }","","    return lines;","  }","","  /**","   * Returns the relative path for a file.","   *","   * @param   {string} filePath","   * @returns {string}","   */","  _getRelativePath(filePath) {","    if (filePath.charAt(0) === '/') {","      filePath = path.relative(process.cwd(), filePath);","    }","","    return filePath;","  }","","  /**","   * Returns the absolute path for a file.","   *","   * @param   {string} filePath","   * @returns {string}","   */","  _getAbsolutePath(filePath) {","    if (filePath.charAt(0) !== '/') {","      filePath = path.resolve(process.cwd(), filePath);","    }","","    return filePath;","  }","}","","module.exports = BaseReporter;",""],"l":{"1":1,"2":1,"3":1,"16":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"28":0,"38":0,"39":0,"40":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"59":0,"63":0,"75":0,"76":0,"86":0,"87":0,"88":0,"91":0,"101":0,"102":0,"105":0,"115":0,"116":0,"119":0,"123":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/json.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/json.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":13},"end":{"line":16,"column":31}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":22}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":32}},"8":{"start":{"line":22,"column":4},"end":{"line":25,"column":7}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":28}},"10":{"start":{"line":24,"column":6},"end":{"line":24,"column":38}},"11":{"start":{"line":27,"column":4},"end":{"line":30,"column":7}},"12":{"start":{"line":28,"column":6},"end":{"line":28,"column":30}},"13":{"start":{"line":29,"column":6},"end":{"line":29,"column":40}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":48}},"15":{"start":{"line":46,"column":4},"end":{"line":55,"column":7}},"16":{"start":{"line":49,"column":8},"end":{"line":53,"column":10}},"17":{"start":{"line":57,"column":4},"end":{"line":57,"column":18}},"18":{"start":{"line":61,"column":0},"end":{"line":61,"column":30}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":15}},{"start":{"line":17,"column":19},"end":{"line":17,"column":21}}]},"2":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":37},"end":{"line":44,"column":42}},{"start":{"line":44,"column":45},"end":{"line":44,"column":47}}]}},"code":["var util         = require('util');","var path         = require('path');","var chalk        = require('chalk');","var BaseReporter = require('./base');","","class JSONReporter extends BaseReporter {","  /**","   * A JSON reporter, which displays both file and line information for","   * each given match.","   *","   * @constructor","   *","   * @param {Inspector} inspector Instance on which to register its listeners","   * @param {object}    opts      Options to set for the reporter","   */","  constructor(inspector, opts) {","    opts = opts || {};","    super(inspector, opts);","","    var enabled = chalk.enabled;","","    inspector.on('start', () => {","      chalk.enabled = false;","      this._writableStream.write('[');","    });","","    inspector.on('end', () => {","      chalk.enabled = enabled;","      this._writableStream.write(']\\n');","    });","  }","","  /**","   * Returns the string output to print for the given reporter. The formatted","   * JSON string contains the number of instances associated with the match and","   * the files and lines involved.","   *","   * @private","   *","   * @param   {Match}  match The inspector match to output","   * @returns {string} The formatted output","   */","  _getOutput(match) {","    var output = (this._found > 1) ? ',\\n' : '';","","    output += JSON.stringify({","      id: match.hash,","      instances: match.instances.map(instance => {","        return {","          path: this._getRelativePath(instance.filename),","          lines: [instance.start.line, instance.end.line],","          code: this._getLines(instance)","        };","      })","    });","","    return output;","  }","}","","module.exports = JSONReporter;",""],"l":{"1":1,"2":1,"3":1,"4":1,"17":0,"18":0,"20":0,"22":0,"23":0,"24":0,"27":0,"28":0,"29":0,"44":0,"46":0,"49":0,"57":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/pmd.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/lib/reporters/pmd.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":13},"end":{"line":16,"column":31}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":20}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":24}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":86,"column":10},"end":{"line":86,"column":21}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":9},"end":{"line":97,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":22}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":32}},"8":{"start":{"line":22,"column":4},"end":{"line":28,"column":7}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":28}},"10":{"start":{"line":24,"column":6},"end":{"line":27,"column":8}},"11":{"start":{"line":30,"column":4},"end":{"line":33,"column":7}},"12":{"start":{"line":31,"column":6},"end":{"line":31,"column":30}},"13":{"start":{"line":32,"column":6},"end":{"line":32,"column":49}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":47}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":36}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":48}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":73}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":71}},"20":{"start":{"line":53,"column":36},"end":{"line":53,"column":69}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"22":{"start":{"line":56,"column":4},"end":{"line":60,"column":7}},"23":{"start":{"line":57,"column":6},"end":{"line":57,"column":58}},"24":{"start":{"line":58,"column":6},"end":{"line":58,"column":43}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":62}},"26":{"start":{"line":61,"column":4},"end":{"line":61,"column":79}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":18}},"28":{"start":{"line":73,"column":4},"end":{"line":75,"column":10}},"29":{"start":{"line":74,"column":6},"end":{"line":74,"column":55}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":60}},"31":{"start":{"line":88,"column":4},"end":{"line":88,"column":72}},"32":{"start":{"line":98,"column":4},"end":{"line":104,"column":6}},"33":{"start":{"line":106,"column":4},"end":{"line":108,"column":7}},"34":{"start":{"line":107,"column":6},"end":{"line":107,"column":27}},"35":{"start":{"line":112,"column":0},"end":{"line":112,"column":29}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":15}},{"start":{"line":17,"column":19},"end":{"line":17,"column":21}}]},"2":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":37},"end":{"line":47,"column":41}},{"start":{"line":47,"column":44},"end":{"line":47,"column":46}}]}},"code":["var util         = require('util');","var path         = require('path');","var chalk        = require('chalk');","var BaseReporter = require('./base');","","class PMDReporter extends BaseReporter {","  /**","   * A PMD CPD XML reporter, which tries to fit jsinspect's output to something","   * CI tools might expect from PMD.","   *","   * @constructor","   *","   * @param {Inspector} inspector Instance on which to register its listeners","   * @param {object}    opts      Options to set for the reporter","   */","  constructor(inspector, opts) {","    opts = opts || {};","    super(inspector, opts);","","    var enabled = chalk.enabled;","","    inspector.on('start', () => {","      chalk.enabled = false;","      this._writableStream.write(","        '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +","        '<pmd-cpd>\\n'","      );","    });","","    inspector.on('end', () => {","      chalk.enabled = enabled;","      this._writableStream.write('</pmd-cpd>\\n');","    });","  }","","  /**","   * Returns an XML string containing a <duplication> element, with <file>","   * children indicating the instance locations, and <codefragment> to hold the","   * lines.","   *","   * @private","   *","   * @param   {Match}  match The inspector match to output","   * @returns {string} The formatted output","   */","  _getOutput(match) {","    var output = (this._found > 1) ? '\\n' : '';","    var codeFragment = '';","    var instances = match.instances;","    var totalLines = this._getTotalLines(match);","","    output += `<duplication lines=\"${totalLines}\" id=\"${match.hash}\">\\n`;","    instances.forEach((instance) => output += this._getFile(instance));","","    output += '<codefragment>';","    instances.forEach((instance) => {","      var location = this._getFormattedLocation(instance);","      var lines = this._getLines(instance);","      codeFragment += `\\n${location}\\n${chalk.grey(lines)}\\n`;","    });","    output += `${this._escape(codeFragment)}</codefragment>\\n</duplication>\\n`;","","    return output;","  }","","  /**","   * Returns the total number of lines spanned by a match.","   *","   * @param   {Match} match","   * @returns {int}","   */","  _getTotalLines(match) {","    return match.instances.reduce((res, curr) => {","      return res + curr.end.line - curr.start.line + 1;","    }, 0);","  }","","  /**","   * Returns an XML string containing the path to the file in which the instance","   * is located, as well as its starting line. Absolute paths are required for","   * Jenkins.","   *","   * @param   {object} instance","   * @returns {string}","   */","  _getFile(instance) {","    var filePath = this._getAbsolutePath(instance.filename);","    return `<file path=\"${filePath}\" line=\"${instance.start.line}\"/>\\n`;","  }","","  /**","   * Returns an escaped string for use within XML.","   *","   * @param   {string} string The string to escape","   * @returns {string} The escaped string","   */","  _escape(string) {","    var escaped = {","      \"'\": '&apos;',","      '\"': '&quot;',","      '&': '&amp;',","      '>': '&gt;',","      '<': '&lt;'","    };","","    return string.replace(/(['\"&><])/g, (string, char) => {","      return escaped[char];","    });","  }","}","","module.exports = PMDReporter;",""],"l":{"1":1,"2":1,"3":1,"4":1,"17":0,"18":0,"20":0,"22":0,"23":0,"24":0,"30":0,"31":0,"32":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":0,"73":0,"74":0,"87":0,"88":0,"98":0,"106":0,"107":0,"112":1}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":27}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":28}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":44}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":38}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":42}}},"6":{"name":"(anonymous_6)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":24}}},"7":{"name":"(anonymous_7)","line":36,"loc":{"start":{"line":36,"column":17},"end":{"line":36,"column":28}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":9},"end":{"line":41,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}},"8":{"start":{"line":10,"column":0},"end":{"line":51,"column":2}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":61}},"10":{"start":{"line":12,"column":38},"end":{"line":12,"column":48}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":26}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":16}},"13":{"start":{"line":18,"column":4},"end":{"line":21,"column":6}},"14":{"start":{"line":19,"column":6},"end":{"line":19,"column":26}},"15":{"start":{"line":19,"column":19},"end":{"line":19,"column":26}},"16":{"start":{"line":20,"column":6},"end":{"line":20,"column":23}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":19}},"18":{"start":{"line":26,"column":4},"end":{"line":28,"column":7}},"19":{"start":{"line":27,"column":6},"end":{"line":27,"column":24}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":18}},"22":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"23":{"start":{"line":38,"column":4},"end":{"line":38,"column":33}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":58}},"25":{"start":{"line":42,"column":30},"end":{"line":42,"column":58}},"26":{"start":{"line":45,"column":4},"end":{"line":45,"column":60}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":40}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":31}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":15}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":6}},{"start":{"line":19,"column":6},"end":{"line":19,"column":6}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]}},"code":["var fs    = require('fs');","var parse = require('../lib/parser').parse;","var chalk = require('chalk');","","var output = '';","var enabled = chalk.enabled;","var write = process.stdout.write;","var parseCache = {};","","module.exports = {","  trimlines: function(str) {","    return str.split('\\n').map(str => str.trim()).join('\\n');","  },","","  captureOutput: function() {","    chalk.enabled = false;","    output = '';","    process.stdout.write = function(string) {","      if (!string) return;","      output += string;","    };","  },","","  collectMatches: function(inspector) {","    var array = [];","    inspector.on('match', function(match) {","      array.push(match);","    });","    return array;","  },","","  getOutput: function() {","    return output;","  },","","  restoreOutput: function() {","    chalk.enabled = enabled;","    process.stdout.write = write;","  },","","  parse: function(filePath) {","    if (parseCache[filePath]) return parseCache[filePath];","","    // Skip the root Program node","    var src = fs.readFileSync(filePath, {encoding: 'utf8'});","    var ast = parse(src, filePath).body;","    parseCache[filePath] = ast;","","    return ast;","  }","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":1,"7":1,"8":1,"10":1,"12":0,"16":0,"17":0,"18":0,"19":0,"20":0,"25":0,"26":0,"27":0,"29":0,"33":0,"37":0,"38":0,"42":0,"45":0,"46":0,"47":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/inspectorSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/inspectorSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":22},"end":{"line":6,"column":33}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":33}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":24}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":26},"end":{"line":17,"column":37}}},"5":{"name":"(anonymous_5)","line":18,"loc":{"start":{"line":18,"column":37},"end":{"line":18,"column":48}}},"6":{"name":"(anonymous_6)","line":22,"loc":{"start":{"line":22,"column":41},"end":{"line":22,"column":52}}},"7":{"name":"(anonymous_7)","line":28,"loc":{"start":{"line":28,"column":44},"end":{"line":28,"column":55}}},"8":{"name":"(anonymous_8)","line":33,"loc":{"start":{"line":33,"column":36},"end":{"line":33,"column":47}}},"9":{"name":"(anonymous_9)","line":40,"loc":{"start":{"line":40,"column":18},"end":{"line":40,"column":29}}},"10":{"name":"(anonymous_10)","line":41,"loc":{"start":{"line":41,"column":30},"end":{"line":41,"column":41}}},"11":{"name":"(anonymous_11)","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":39}}},"12":{"name":"(anonymous_12)","line":52,"loc":{"start":{"line":52,"column":29},"end":{"line":52,"column":40}}},"13":{"name":"(anonymous_13)","line":55,"loc":{"start":{"line":55,"column":26},"end":{"line":55,"column":37}}},"14":{"name":"(anonymous_14)","line":63,"loc":{"start":{"line":63,"column":56},"end":{"line":63,"column":67}}},"15":{"name":"(anonymous_15)","line":74,"loc":{"start":{"line":74,"column":50},"end":{"line":74,"column":61}}},"16":{"name":"(anonymous_16)","line":91,"loc":{"start":{"line":91,"column":57},"end":{"line":91,"column":68}}},"17":{"name":"(anonymous_17)","line":108,"loc":{"start":{"line":108,"column":21},"end":{"line":108,"column":32}}},"18":{"name":"(anonymous_18)","line":125,"loc":{"start":{"line":125,"column":21},"end":{"line":125,"column":32}}},"19":{"name":"(anonymous_19)","line":142,"loc":{"start":{"line":142,"column":22},"end":{"line":142,"column":33}}},"20":{"name":"(anonymous_20)","line":159,"loc":{"start":{"line":159,"column":42},"end":{"line":159,"column":53}}},"21":{"name":"(anonymous_21)","line":186,"loc":{"start":{"line":186,"column":60},"end":{"line":186,"column":71}}},"22":{"name":"(anonymous_22)","line":198,"loc":{"start":{"line":198,"column":44},"end":{"line":198,"column":55}}},"23":{"name":"(anonymous_23)","line":208,"loc":{"start":{"line":208,"column":39},"end":{"line":208,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":50}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"5":{"start":{"line":6,"column":0},"end":{"line":217,"column":3}},"6":{"start":{"line":8,"column":2},"end":{"line":8,"column":12}},"7":{"start":{"line":9,"column":2},"end":{"line":11,"column":4}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":22}},"9":{"start":{"line":13,"column":2},"end":{"line":15,"column":5}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":15}},"11":{"start":{"line":17,"column":2},"end":{"line":38,"column":5}},"12":{"start":{"line":18,"column":4},"end":{"line":20,"column":7}},"13":{"start":{"line":19,"column":6},"end":{"line":19,"column":53}},"14":{"start":{"line":22,"column":4},"end":{"line":26,"column":7}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":47}},"16":{"start":{"line":24,"column":6},"end":{"line":24,"column":47}},"17":{"start":{"line":25,"column":6},"end":{"line":25,"column":52}},"18":{"start":{"line":28,"column":4},"end":{"line":31,"column":7}},"19":{"start":{"line":29,"column":6},"end":{"line":29,"column":40}},"20":{"start":{"line":30,"column":6},"end":{"line":30,"column":45}},"21":{"start":{"line":33,"column":4},"end":{"line":37,"column":7}},"22":{"start":{"line":34,"column":6},"end":{"line":34,"column":33}},"23":{"start":{"line":35,"column":6},"end":{"line":35,"column":46}},"24":{"start":{"line":36,"column":6},"end":{"line":36,"column":57}},"25":{"start":{"line":40,"column":2},"end":{"line":72,"column":5}},"26":{"start":{"line":41,"column":4},"end":{"line":50,"column":7}},"27":{"start":{"line":42,"column":6},"end":{"line":42,"column":18}},"28":{"start":{"line":43,"column":6},"end":{"line":43,"column":61}},"29":{"start":{"line":44,"column":6},"end":{"line":46,"column":9}},"30":{"start":{"line":45,"column":8},"end":{"line":45,"column":23}},"31":{"start":{"line":48,"column":6},"end":{"line":48,"column":22}},"32":{"start":{"line":49,"column":6},"end":{"line":49,"column":34}},"33":{"start":{"line":52,"column":4},"end":{"line":61,"column":7}},"34":{"start":{"line":53,"column":6},"end":{"line":53,"column":18}},"35":{"start":{"line":54,"column":6},"end":{"line":54,"column":61}},"36":{"start":{"line":55,"column":6},"end":{"line":57,"column":9}},"37":{"start":{"line":56,"column":8},"end":{"line":56,"column":23}},"38":{"start":{"line":59,"column":6},"end":{"line":59,"column":22}},"39":{"start":{"line":60,"column":6},"end":{"line":60,"column":34}},"40":{"start":{"line":63,"column":4},"end":{"line":71,"column":7}},"41":{"start":{"line":64,"column":6},"end":{"line":66,"column":9}},"42":{"start":{"line":68,"column":6},"end":{"line":68,"column":38}},"43":{"start":{"line":69,"column":6},"end":{"line":69,"column":22}},"44":{"start":{"line":70,"column":6},"end":{"line":70,"column":38}},"45":{"start":{"line":74,"column":2},"end":{"line":89,"column":5}},"46":{"start":{"line":75,"column":4},"end":{"line":77,"column":7}},"47":{"start":{"line":79,"column":4},"end":{"line":79,"column":36}},"48":{"start":{"line":80,"column":4},"end":{"line":80,"column":20}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":25}},"50":{"start":{"line":83,"column":4},"end":{"line":83,"column":36}},"51":{"start":{"line":84,"column":4},"end":{"line":84,"column":46}},"52":{"start":{"line":85,"column":4},"end":{"line":85,"column":66}},"53":{"start":{"line":86,"column":4},"end":{"line":86,"column":64}},"54":{"start":{"line":87,"column":4},"end":{"line":87,"column":66}},"55":{"start":{"line":88,"column":4},"end":{"line":88,"column":65}},"56":{"start":{"line":91,"column":2},"end":{"line":106,"column":5}},"57":{"start":{"line":92,"column":4},"end":{"line":94,"column":7}},"58":{"start":{"line":96,"column":4},"end":{"line":96,"column":36}},"59":{"start":{"line":97,"column":4},"end":{"line":97,"column":20}},"60":{"start":{"line":99,"column":4},"end":{"line":99,"column":25}},"61":{"start":{"line":100,"column":4},"end":{"line":100,"column":36}},"62":{"start":{"line":101,"column":4},"end":{"line":101,"column":46}},"63":{"start":{"line":102,"column":4},"end":{"line":102,"column":66}},"64":{"start":{"line":103,"column":4},"end":{"line":103,"column":64}},"65":{"start":{"line":104,"column":4},"end":{"line":104,"column":67}},"66":{"start":{"line":105,"column":4},"end":{"line":105,"column":65}},"67":{"start":{"line":108,"column":2},"end":{"line":123,"column":5}},"68":{"start":{"line":109,"column":4},"end":{"line":111,"column":7}},"69":{"start":{"line":113,"column":4},"end":{"line":113,"column":36}},"70":{"start":{"line":114,"column":4},"end":{"line":114,"column":20}},"71":{"start":{"line":116,"column":4},"end":{"line":116,"column":25}},"72":{"start":{"line":117,"column":4},"end":{"line":117,"column":36}},"73":{"start":{"line":118,"column":4},"end":{"line":118,"column":46}},"74":{"start":{"line":119,"column":4},"end":{"line":119,"column":66}},"75":{"start":{"line":120,"column":4},"end":{"line":120,"column":64}},"76":{"start":{"line":121,"column":4},"end":{"line":121,"column":66}},"77":{"start":{"line":122,"column":4},"end":{"line":122,"column":65}},"78":{"start":{"line":125,"column":2},"end":{"line":140,"column":5}},"79":{"start":{"line":126,"column":4},"end":{"line":128,"column":7}},"80":{"start":{"line":130,"column":4},"end":{"line":130,"column":36}},"81":{"start":{"line":131,"column":4},"end":{"line":131,"column":20}},"82":{"start":{"line":133,"column":4},"end":{"line":133,"column":25}},"83":{"start":{"line":134,"column":4},"end":{"line":134,"column":36}},"84":{"start":{"line":135,"column":4},"end":{"line":135,"column":46}},"85":{"start":{"line":136,"column":4},"end":{"line":136,"column":66}},"86":{"start":{"line":137,"column":4},"end":{"line":137,"column":64}},"87":{"start":{"line":138,"column":4},"end":{"line":138,"column":67}},"88":{"start":{"line":139,"column":4},"end":{"line":139,"column":65}},"89":{"start":{"line":142,"column":2},"end":{"line":157,"column":5}},"90":{"start":{"line":143,"column":4},"end":{"line":145,"column":7}},"91":{"start":{"line":147,"column":4},"end":{"line":147,"column":36}},"92":{"start":{"line":148,"column":4},"end":{"line":148,"column":20}},"93":{"start":{"line":150,"column":4},"end":{"line":150,"column":25}},"94":{"start":{"line":151,"column":4},"end":{"line":151,"column":36}},"95":{"start":{"line":152,"column":4},"end":{"line":152,"column":46}},"96":{"start":{"line":153,"column":4},"end":{"line":153,"column":66}},"97":{"start":{"line":154,"column":4},"end":{"line":154,"column":64}},"98":{"start":{"line":155,"column":4},"end":{"line":155,"column":66}},"99":{"start":{"line":156,"column":4},"end":{"line":156,"column":65}},"100":{"start":{"line":159,"column":2},"end":{"line":184,"column":5}},"101":{"start":{"line":160,"column":4},"end":{"line":162,"column":7}},"102":{"start":{"line":164,"column":4},"end":{"line":164,"column":36}},"103":{"start":{"line":165,"column":4},"end":{"line":165,"column":20}},"104":{"start":{"line":167,"column":4},"end":{"line":167,"column":25}},"105":{"start":{"line":168,"column":4},"end":{"line":168,"column":36}},"106":{"start":{"line":169,"column":4},"end":{"line":169,"column":46}},"107":{"start":{"line":170,"column":4},"end":{"line":176,"column":6}},"108":{"start":{"line":177,"column":4},"end":{"line":183,"column":6}},"109":{"start":{"line":186,"column":2},"end":{"line":196,"column":5}},"110":{"start":{"line":187,"column":4},"end":{"line":190,"column":7}},"111":{"start":{"line":192,"column":4},"end":{"line":192,"column":36}},"112":{"start":{"line":193,"column":4},"end":{"line":193,"column":20}},"113":{"start":{"line":194,"column":4},"end":{"line":194,"column":36}},"114":{"start":{"line":195,"column":4},"end":{"line":195,"column":49}},"115":{"start":{"line":198,"column":2},"end":{"line":206,"column":5}},"116":{"start":{"line":199,"column":4},"end":{"line":201,"column":7}},"117":{"start":{"line":203,"column":4},"end":{"line":203,"column":36}},"118":{"start":{"line":204,"column":4},"end":{"line":204,"column":20}},"119":{"start":{"line":205,"column":4},"end":{"line":205,"column":36}},"120":{"start":{"line":208,"column":2},"end":{"line":216,"column":5}},"121":{"start":{"line":209,"column":4},"end":{"line":211,"column":7}},"122":{"start":{"line":213,"column":4},"end":{"line":213,"column":36}},"123":{"start":{"line":214,"column":4},"end":{"line":214,"column":20}},"124":{"start":{"line":215,"column":4},"end":{"line":215,"column":36}}},"branchMap":{},"code":["var expect       = require('expect.js');","var EventEmitter = require('events').EventEmitter;","var Inspector    = require('../lib/inspector');","var fixtures     = require('./fixtures');","","describe('Inspector', function() {","  // Used to test emitted events","  var found;","  var listener = function(match) {","    found.push(match);","  };","","  beforeEach(function() {","    found = [];","  });","","  describe('constructor', function() {","    it('inherits from EventEmitter', function() {","      expect(new Inspector()).to.be.an(EventEmitter);","    });","","    it('accepts an array of file paths', function() {","      var filePaths = ['path1.js', 'path2.js'];","      var inspector = new Inspector(filePaths);","      expect(inspector._filePaths).to.be(filePaths);","    });","","    it('assigns a default threshold of 30', function() {","      var inspector = new Inspector([]);","      expect(inspector._threshold).to.be(30);","    });","","    it('accepts an options object', function() {","      var opts = {threshold: 12};","      var inspector = new Inspector([], opts);","      expect(inspector._threshold).to.be(opts.threshold);","    });","  });","","  describe('run', function() {","    it('emits a start event', function() {","      var emitted;","      var inspector = new Inspector([fixtures.intersection]);","      inspector.on('start', function() {","        emitted = true;","      });","","      inspector.run();","      expect(emitted).to.be(true);","    });","","    it('emits an end event', function() {","      var emitted;","      var inspector = new Inspector([fixtures.intersection]);","      inspector.on('end', function() {","        emitted = true;","      });","","      inspector.run();","      expect(emitted).to.be(true);","    });","","    it('emits the \"match\" event when a match is found', function() {","      var inspector = new Inspector([fixtures.intersection], {","        threshold: 10","      });","","      inspector.on('match', listener);","      inspector.run();","      expect(found).to.have.length(1);","    });","  });","","  it('can find an exact match between instances', function() {","    var inspector = new Inspector([fixtures.intersection], {","      threshold: 15","    });","","    inspector.on('match', listener);","    inspector.run();","","    var match = found[0];","    expect(found).to.have.length(1);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0].start).to.eql({line: 1, column: 0});","    expect(match.instances[0].end).to.eql({line: 5, column: 1});","    expect(match.instances[1].start).to.eql({line: 7, column: 0});","    expect(match.instances[1].end).to.eql({line: 11, column: 1});","  });","","  it('can find the largest match between two instances', function() {","    var inspector = new Inspector([fixtures.redundantIntersection], {","      threshold: 11","    });","","    inspector.on('match', listener);","    inspector.run();","","    var match = found[0];","    expect(found).to.have.length(1);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0].start).to.eql({line: 1, column: 0});","    expect(match.instances[0].end).to.eql({line: 9, column: 1});","    expect(match.instances[1].start).to.eql({line: 11, column: 0});","    expect(match.instances[1].end).to.eql({line: 19, column: 1});","  });","","  it('supports ES6', function() {","    var inspector = new Inspector([fixtures.es6ClassExport], {","      threshold: 20","    });","","    inspector.on('match', listener);","    inspector.run();","","    var match = found[0];","    expect(found).to.have.length(1);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0].start).to.eql({line: 2, column: 2});","    expect(match.instances[0].end).to.eql({line: 6, column: 3});","    expect(match.instances[1].start).to.eql({line: 8, column: 2});","    expect(match.instances[1].end).to.eql({line: 12, column: 3});","  });","","  it('supports JSX', function() {","    var inspector = new Inspector([fixtures.jsxTodo], {","      threshold: 20","    });","","    inspector.on('match', listener);","    inspector.run();","","    var match = found[0];","    expect(found).to.have.length(1);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0].start).to.eql({line: 3, column: 0});","    expect(match.instances[0].end).to.eql({line: 9, column: 1});","    expect(match.instances[1].start).to.eql({line: 11, column: 0});","    expect(match.instances[1].end).to.eql({line: 17, column: 1});","  });","","  it('supports Flow', function() {","    var inspector = new Inspector([fixtures.flowIntersection], {","      threshold: 20","    });","","    inspector.on('match', listener);","    inspector.run();","","    var match = found[0];","    expect(found).to.have.length(1);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0].start).to.eql({line: 1, column: 0});","    expect(match.instances[0].end).to.eql({line: 5, column: 1});","    expect(match.instances[1].start).to.eql({line: 7, column: 0});","    expect(match.instances[1].end).to.eql({line: 11, column: 1});","  });","","  it('includes the lines with the match', function() {","    var inspector = new Inspector([fixtures.intersection], {","      threshold: 11,","    });","","    inspector.on('match', listener);","    inspector.run();","","    var match = found[0];","    expect(found).to.have.length(1);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0].lines).to.be(","      'function intersectionA(array1, array2) {\\n' +","      '  array1.filter(function(n) {\\n' +","      '    return array2.indexOf(n) != -1;\\n' +","      '  });\\n' +","      '}'","    );","    expect(match.instances[1].lines).to.be(","      'function intersectionB(arrayA, arrayB) {\\n' +","      '  arrayA.filter(function(n) {\\n' +","      '    return arrayB.indexOf(n) != -1;\\n' +","      '  });\\n' +","      '}'","    );","  });","","  it('ignores matches with less than the supplied minimum', function() {","    var inspector = new Inspector([fixtures.matches], {","      threshold: 2,","      minInstances: 3","    });","","    inspector.on('match', listener);","    inspector.run();","    expect(found).to.have.length(1);","    expect(found[0].instances).to.have.length(3);","  });","","  it('ignores CommonJS require statements', function() {","    var inspector = new Inspector([fixtures.commonjs], {","      threshold: 3","    });","","    inspector.on('match', listener);","    inspector.run();","    expect(found).to.have.length(0);","  });","","  it('ignores AMD define expressions', function() {","    var inspector = new Inspector([fixtures.amd], {","      threshold: 5","    });","","    inspector.on('match', listener);","    inspector.run();","    expect(found).to.have.length(0);","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"6":0,"8":0,"9":0,"10":0,"13":0,"14":0,"17":0,"18":0,"19":0,"22":0,"23":0,"24":0,"25":0,"28":0,"29":0,"30":0,"33":0,"34":0,"35":0,"36":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":0,"49":0,"52":0,"53":0,"54":0,"55":0,"56":0,"59":0,"60":0,"63":0,"64":0,"68":0,"69":0,"70":0,"74":0,"75":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"91":0,"92":0,"96":0,"97":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"108":0,"109":0,"113":0,"114":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"125":0,"126":0,"130":0,"131":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"142":0,"143":0,"147":0,"148":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"159":0,"160":0,"164":0,"165":0,"167":0,"168":0,"169":0,"170":0,"177":0,"186":0,"187":0,"192":0,"193":0,"194":0,"195":0,"198":0,"199":0,"203":0,"204":0,"205":0,"208":0,"209":0,"213":0,"214":0,"215":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/matchSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/matchSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":29}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":43},"end":{"line":19,"column":54}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":67},"end":{"line":26,"column":78}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":61},"end":{"line":32,"column":72}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":39}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":68},"end":{"line":55,"column":79}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":40}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"6":{"start":{"line":7,"column":0},"end":{"line":64,"column":3}},"7":{"start":{"line":8,"column":2},"end":{"line":17,"column":4}},"8":{"start":{"line":19,"column":2},"end":{"line":24,"column":5}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":38}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":39}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":67}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"13":{"start":{"line":26,"column":2},"end":{"line":30,"column":5}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":46}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":60}},"17":{"start":{"line":32,"column":2},"end":{"line":52,"column":5}},"18":{"start":{"line":33,"column":4},"end":{"line":50,"column":8}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":66}},"20":{"start":{"line":54,"column":2},"end":{"line":63,"column":5}},"21":{"start":{"line":55,"column":4},"end":{"line":62,"column":7}},"22":{"start":{"line":56,"column":6},"end":{"line":56,"column":40}},"23":{"start":{"line":57,"column":6},"end":{"line":59,"column":9}},"24":{"start":{"line":60,"column":6},"end":{"line":60,"column":58}},"25":{"start":{"line":61,"column":6},"end":{"line":61,"column":53}}},"branchMap":{},"code":["var expect    = require('expect.js');","var Match     = require('../lib/match');","var fixtures  = require('./fixtures');","var NodeUtils = require('../lib/nodeUtils');","var crypto    = require('crypto');","","describe('Match', function() {","  var nodeArrays = [","    [{","      type: 'BlockStatement',","      loc: {filename: 'a', start: {line: 1, column: 0}, end: {line: 2, column: 3}}","    }],","    [{","      type: 'Literal',","      loc: {filename: 'a', start: {line: 3, column: 0}, end: {line: 3, column: 3}}","    }]","  ];","","  it('has a hash based on the node types', function() {","    var match = new Match(nodeArrays);","    var str = 'BlockStatement:Literal';","    var sha1 = crypto.createHash('sha1').update(str).digest('hex');","    expect(match.hash).to.be(sha1);","  });","","  it('stores instance objects containing filename, start and end', function() {","    var match = new Match(nodeArrays);","    expect(match.instances).to.have.length(2);","    expect(match.instances[0]).to.eql(nodeArrays[0][0].loc);","  });","","  it('uses the minimum start value of nodes in an instance', function() {","    var match = new Match([[","      {","        type: 'a',","        loc: {filename: 'a', start: {line: 2, column: 0}, end: {line: 2, column: 0}}","      },","      {","        type: 'a',","        loc: {filename: 'a', start: {line: 1, column: 2}, end: {line: 1, column: 2}}","      },","      {","        type: 'a',","        loc: {filename: 'a', start: {line: 1, column: 0}, end: {line: 1, column: 0}}","      },","      {","        type: 'a',","        loc: {filename: 'a', start: {line: 3, column: 0}, end: {line: 3, column: 0}}","      }","    ]]);","    expect(match.instances[0].start).to.eql({line: 1, column: 0});","  });","","  describe('populateLines', function() {","    it('adds the relevant source lines as a prop to each instance', function() {","      var match = new Match(nodeArrays);","      match.populateLines({","        a: ['foo', 'bar', 'baz']","      });","      expect(match.instances[0].lines).to.eql('foo\\nbar');","      expect(match.instances[1].lines).to.eql('baz');","    });","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"7":0,"8":0,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"32":0,"33":0,"51":0,"54":0,"55":0,"56":0,"57":0,"60":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/nodeUtilsSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/nodeUtilsSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":22},"end":{"line":6,"column":33}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":38}}},"3":{"name":"(anonymous_3)","line":8,"loc":{"start":{"line":8,"column":42},"end":{"line":8,"column":53}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":41}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":47},"end":{"line":24,"column":58}}},"6":{"name":"(anonymous_6)","line":40,"loc":{"start":{"line":40,"column":30},"end":{"line":40,"column":41}}},"7":{"name":"(anonymous_7)","line":41,"loc":{"start":{"line":41,"column":47},"end":{"line":41,"column":58}}},"8":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":26},"end":{"line":57,"column":37}}},"9":{"name":"(anonymous_9)","line":58,"loc":{"start":{"line":58,"column":41},"end":{"line":58,"column":52}}},"10":{"name":"(anonymous_10)","line":71,"loc":{"start":{"line":71,"column":32},"end":{"line":71,"column":43}}},"11":{"name":"(anonymous_11)","line":80,"loc":{"start":{"line":80,"column":38},"end":{"line":80,"column":49}}},"12":{"name":"(anonymous_12)","line":87,"loc":{"start":{"line":87,"column":23},"end":{"line":87,"column":34}}},"13":{"name":"(anonymous_13)","line":88,"loc":{"start":{"line":88,"column":56},"end":{"line":88,"column":67}}},"14":{"name":"(anonymous_14)","line":89,"loc":{"start":{"line":89,"column":67},"end":{"line":89,"column":78}}},"15":{"name":"(anonymous_15)","line":97,"loc":{"start":{"line":97,"column":71},"end":{"line":97,"column":82}}},"16":{"name":"(anonymous_16)","line":106,"loc":{"start":{"line":106,"column":54},"end":{"line":106,"column":65}}},"17":{"name":"(anonymous_17)","line":107,"loc":{"start":{"line":107,"column":69},"end":{"line":107,"column":80}}},"18":{"name":"(anonymous_18)","line":115,"loc":{"start":{"line":115,"column":71},"end":{"line":115,"column":82}}},"19":{"name":"(anonymous_19)","line":125,"loc":{"start":{"line":125,"column":32},"end":{"line":125,"column":43}}},"20":{"name":"(anonymous_20)","line":126,"loc":{"start":{"line":126,"column":49},"end":{"line":126,"column":60}}},"21":{"name":"(anonymous_21)","line":132,"loc":{"start":{"line":132,"column":47},"end":{"line":132,"column":58}}},"22":{"name":"(anonymous_22)","line":138,"loc":{"start":{"line":138,"column":34},"end":{"line":138,"column":45}}},"23":{"name":"(anonymous_23)","line":144,"loc":{"start":{"line":144,"column":20},"end":{"line":144,"column":31}}},"24":{"name":"(anonymous_24)","line":145,"loc":{"start":{"line":145,"column":61},"end":{"line":145,"column":72}}},"25":{"name":"(anonymous_25)","line":151,"loc":{"start":{"line":151,"column":61},"end":{"line":151,"column":72}}},"26":{"name":"(anonymous_26)","line":157,"loc":{"start":{"line":157,"column":58},"end":{"line":157,"column":69}}},"27":{"name":"(anonymous_27)","line":162,"loc":{"start":{"line":162,"column":49},"end":{"line":162,"column":60}}},"28":{"name":"(anonymous_28)","line":167,"loc":{"start":{"line":167,"column":34},"end":{"line":167,"column":45}}},"29":{"name":"(anonymous_29)","line":173,"loc":{"start":{"line":173,"column":25},"end":{"line":173,"column":36}}},"30":{"name":"(anonymous_30)","line":174,"loc":{"start":{"line":174,"column":62},"end":{"line":174,"column":73}}},"31":{"name":"(anonymous_31)","line":180,"loc":{"start":{"line":180,"column":62},"end":{"line":180,"column":73}}},"32":{"name":"(anonymous_32)","line":186,"loc":{"start":{"line":186,"column":34},"end":{"line":186,"column":45}}},"33":{"name":"(anonymous_33)","line":192,"loc":{"start":{"line":192,"column":25},"end":{"line":192,"column":36}}},"34":{"name":"(anonymous_34)","line":193,"loc":{"start":{"line":193,"column":47},"end":{"line":193,"column":58}}},"35":{"name":"(anonymous_35)","line":200,"loc":{"start":{"line":200,"column":52},"end":{"line":200,"column":63}}},"36":{"name":"(anonymous_36)","line":208,"loc":{"start":{"line":208,"column":31},"end":{"line":208,"column":42}}},"37":{"name":"(anonymous_37)","line":209,"loc":{"start":{"line":209,"column":60},"end":{"line":209,"column":71}}},"38":{"name":"(anonymous_38)","line":216,"loc":{"start":{"line":216,"column":52},"end":{"line":216,"column":63}}},"39":{"name":"(anonymous_39)","line":224,"loc":{"start":{"line":224,"column":28},"end":{"line":224,"column":39}}},"40":{"name":"(anonymous_40)","line":225,"loc":{"start":{"line":225,"column":59},"end":{"line":225,"column":70}}},"41":{"name":"(anonymous_41)","line":234,"loc":{"start":{"line":234,"column":64},"end":{"line":234,"column":75}}},"42":{"name":"(anonymous_42)","line":243,"loc":{"start":{"line":243,"column":38},"end":{"line":243,"column":49}}},"43":{"name":"(anonymous_43)","line":252,"loc":{"start":{"line":252,"column":61},"end":{"line":252,"column":72}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":6,"column":0},"end":{"line":261,"column":3}},"6":{"start":{"line":7,"column":2},"end":{"line":21,"column":5}},"7":{"start":{"line":8,"column":4},"end":{"line":20,"column":7}},"8":{"start":{"line":9,"column":6},"end":{"line":9,"column":19}},"9":{"start":{"line":10,"column":6},"end":{"line":10,"column":51}},"10":{"start":{"line":11,"column":6},"end":{"line":11,"column":64}},"11":{"start":{"line":11,"column":43},"end":{"line":11,"column":62}},"12":{"start":{"line":12,"column":6},"end":{"line":19,"column":9}},"13":{"start":{"line":23,"column":2},"end":{"line":38,"column":5}},"14":{"start":{"line":24,"column":4},"end":{"line":37,"column":7}},"15":{"start":{"line":25,"column":6},"end":{"line":25,"column":19}},"16":{"start":{"line":26,"column":6},"end":{"line":26,"column":50}},"17":{"start":{"line":27,"column":6},"end":{"line":27,"column":70}},"18":{"start":{"line":27,"column":59},"end":{"line":27,"column":68}},"19":{"start":{"line":28,"column":6},"end":{"line":36,"column":9}},"20":{"start":{"line":40,"column":2},"end":{"line":55,"column":5}},"21":{"start":{"line":41,"column":4},"end":{"line":54,"column":7}},"22":{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},"23":{"start":{"line":43,"column":6},"end":{"line":43,"column":50}},"24":{"start":{"line":44,"column":6},"end":{"line":44,"column":70}},"25":{"start":{"line":44,"column":59},"end":{"line":44,"column":68}},"26":{"start":{"line":45,"column":6},"end":{"line":53,"column":9}},"27":{"start":{"line":57,"column":2},"end":{"line":85,"column":5}},"28":{"start":{"line":58,"column":4},"end":{"line":69,"column":7}},"29":{"start":{"line":59,"column":6},"end":{"line":59,"column":59}},"30":{"start":{"line":60,"column":6},"end":{"line":60,"column":46}},"31":{"start":{"line":63,"column":6},"end":{"line":68,"column":8}},"32":{"start":{"line":63,"column":29},"end":{"line":63,"column":38}},"33":{"start":{"line":71,"column":4},"end":{"line":78,"column":7}},"34":{"start":{"line":72,"column":6},"end":{"line":72,"column":75}},"35":{"start":{"line":75,"column":6},"end":{"line":75,"column":46}},"36":{"start":{"line":76,"column":6},"end":{"line":76,"column":36}},"37":{"start":{"line":77,"column":6},"end":{"line":77,"column":46}},"38":{"start":{"line":80,"column":4},"end":{"line":84,"column":7}},"39":{"start":{"line":81,"column":6},"end":{"line":81,"column":68}},"40":{"start":{"line":82,"column":6},"end":{"line":82,"column":46}},"41":{"start":{"line":83,"column":6},"end":{"line":83,"column":66}},"42":{"start":{"line":83,"column":26},"end":{"line":83,"column":64}},"43":{"start":{"line":87,"column":2},"end":{"line":123,"column":5}},"44":{"start":{"line":88,"column":4},"end":{"line":104,"column":7}},"45":{"start":{"line":89,"column":6},"end":{"line":95,"column":9}},"46":{"start":{"line":90,"column":8},"end":{"line":93,"column":10}},"47":{"start":{"line":94,"column":8},"end":{"line":94,"column":32}},"48":{"start":{"line":97,"column":6},"end":{"line":103,"column":9}},"49":{"start":{"line":98,"column":8},"end":{"line":101,"column":10}},"50":{"start":{"line":102,"column":8},"end":{"line":102,"column":33}},"51":{"start":{"line":106,"column":4},"end":{"line":122,"column":7}},"52":{"start":{"line":107,"column":6},"end":{"line":113,"column":9}},"53":{"start":{"line":108,"column":8},"end":{"line":111,"column":10}},"54":{"start":{"line":112,"column":8},"end":{"line":112,"column":32}},"55":{"start":{"line":115,"column":6},"end":{"line":121,"column":9}},"56":{"start":{"line":116,"column":8},"end":{"line":119,"column":10}},"57":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"58":{"start":{"line":125,"column":2},"end":{"line":142,"column":5}},"59":{"start":{"line":126,"column":4},"end":{"line":130,"column":7}},"60":{"start":{"line":128,"column":6},"end":{"line":128,"column":57}},"61":{"start":{"line":129,"column":6},"end":{"line":129,"column":61}},"62":{"start":{"line":132,"column":4},"end":{"line":136,"column":7}},"63":{"start":{"line":134,"column":6},"end":{"line":134,"column":57}},"64":{"start":{"line":135,"column":6},"end":{"line":135,"column":62}},"65":{"start":{"line":138,"column":4},"end":{"line":141,"column":7}},"66":{"start":{"line":139,"column":6},"end":{"line":139,"column":51}},"67":{"start":{"line":140,"column":6},"end":{"line":140,"column":62}},"68":{"start":{"line":144,"column":2},"end":{"line":171,"column":5}},"69":{"start":{"line":145,"column":4},"end":{"line":149,"column":7}},"70":{"start":{"line":147,"column":6},"end":{"line":147,"column":51}},"71":{"start":{"line":148,"column":6},"end":{"line":148,"column":49}},"72":{"start":{"line":151,"column":4},"end":{"line":155,"column":7}},"73":{"start":{"line":153,"column":6},"end":{"line":153,"column":51}},"74":{"start":{"line":154,"column":6},"end":{"line":154,"column":49}},"75":{"start":{"line":157,"column":4},"end":{"line":160,"column":7}},"76":{"start":{"line":158,"column":6},"end":{"line":158,"column":51}},"77":{"start":{"line":159,"column":6},"end":{"line":159,"column":49}},"78":{"start":{"line":162,"column":4},"end":{"line":165,"column":7}},"79":{"start":{"line":163,"column":6},"end":{"line":163,"column":51}},"80":{"start":{"line":164,"column":6},"end":{"line":164,"column":49}},"81":{"start":{"line":167,"column":4},"end":{"line":170,"column":7}},"82":{"start":{"line":168,"column":6},"end":{"line":168,"column":51}},"83":{"start":{"line":169,"column":6},"end":{"line":169,"column":50}},"84":{"start":{"line":173,"column":2},"end":{"line":190,"column":5}},"85":{"start":{"line":174,"column":4},"end":{"line":178,"column":7}},"86":{"start":{"line":176,"column":6},"end":{"line":176,"column":56}},"87":{"start":{"line":177,"column":6},"end":{"line":177,"column":54}},"88":{"start":{"line":180,"column":4},"end":{"line":184,"column":7}},"89":{"start":{"line":182,"column":6},"end":{"line":182,"column":56}},"90":{"start":{"line":183,"column":6},"end":{"line":183,"column":54}},"91":{"start":{"line":186,"column":4},"end":{"line":189,"column":7}},"92":{"start":{"line":187,"column":6},"end":{"line":187,"column":46}},"93":{"start":{"line":188,"column":6},"end":{"line":188,"column":55}},"94":{"start":{"line":192,"column":2},"end":{"line":206,"column":5}},"95":{"start":{"line":193,"column":4},"end":{"line":198,"column":7}},"96":{"start":{"line":194,"column":6},"end":{"line":196,"column":9}},"97":{"start":{"line":197,"column":6},"end":{"line":197,"column":30}},"98":{"start":{"line":200,"column":4},"end":{"line":205,"column":7}},"99":{"start":{"line":201,"column":6},"end":{"line":203,"column":9}},"100":{"start":{"line":204,"column":6},"end":{"line":204,"column":31}},"101":{"start":{"line":208,"column":2},"end":{"line":222,"column":5}},"102":{"start":{"line":209,"column":4},"end":{"line":214,"column":7}},"103":{"start":{"line":210,"column":6},"end":{"line":212,"column":9}},"104":{"start":{"line":213,"column":6},"end":{"line":213,"column":30}},"105":{"start":{"line":216,"column":4},"end":{"line":221,"column":7}},"106":{"start":{"line":217,"column":6},"end":{"line":219,"column":9}},"107":{"start":{"line":220,"column":6},"end":{"line":220,"column":31}},"108":{"start":{"line":224,"column":2},"end":{"line":260,"column":5}},"109":{"start":{"line":225,"column":4},"end":{"line":232,"column":7}},"110":{"start":{"line":226,"column":6},"end":{"line":230,"column":9}},"111":{"start":{"line":231,"column":6},"end":{"line":231,"column":30}},"112":{"start":{"line":234,"column":4},"end":{"line":241,"column":7}},"113":{"start":{"line":235,"column":6},"end":{"line":239,"column":9}},"114":{"start":{"line":240,"column":6},"end":{"line":240,"column":31}},"115":{"start":{"line":243,"column":4},"end":{"line":250,"column":7}},"116":{"start":{"line":244,"column":6},"end":{"line":248,"column":9}},"117":{"start":{"line":249,"column":6},"end":{"line":249,"column":31}},"118":{"start":{"line":252,"column":4},"end":{"line":259,"column":7}},"119":{"start":{"line":253,"column":6},"end":{"line":257,"column":9}},"120":{"start":{"line":258,"column":6},"end":{"line":258,"column":30}}},"branchMap":{},"code":["var expect    = require('expect.js');","var fixtures  = require('./fixtures');","var helpers   = require('./helpers');","var NodeUtils = require('../lib/nodeUtils');","","describe('NodeUtils', function() {","  describe('walkSubtrees', function() {","    it('walks each child node using DFS', function() {","      var res = [];","      var root = helpers.parse(fixtures.simple)[0];","      NodeUtils.walkSubtrees(root, node => res.push(node.type));","      expect(res).to.eql([","        'ExpressionStatement',","        'UpdateExpression',","        'Identifier',","        'ExpressionStatement',","        'CallExpression',","        'Identifier'","      ]);","    });","  });","","  describe('getDFSTraversal', function() {","    it('returns the DFS traversal of the AST', function() {","      var res = [];","      var ast = helpers.parse(fixtures.simple)[0];","      var res = NodeUtils.getDFSTraversal(ast).map(node => node.type);","      expect(res).to.eql([","        'BlockStatement',","        'ExpressionStatement',","        'UpdateExpression',","        'Identifier',","        'ExpressionStatement',","        'CallExpression',","        'Identifier'","      ]);","    });","  });","","  describe('getBFSTraversal', function() {","    it('returns the BFS traversal of the AST', function() {","      var res = [];","      var ast = helpers.parse(fixtures.simple)[0];","      var res = NodeUtils.getBFSTraversal(ast).map(node => node.type);","      expect(res).to.eql([","        'BlockStatement',","        'ExpressionStatement',","        'ExpressionStatement',","        'UpdateExpression',","        'CallExpression',","        'Identifier',","        'Identifier'","      ]);","    });","  });","","  describe('getChildren', function() {","    it('returns the children of a Node', function() {","      var parent = helpers.parse(fixtures.intersection)[0];","      var res = NodeUtils.getChildren(parent);","      // Children should be the three identifiers intersectionA,","      // array1, and array2, followed by a block statement","      expect(res.map(node => node.type)).to.eql([","        'Identifier',","        'Identifier',","        'Identifier',","        'BlockStatement'","      ])","    });","","    it('ignores null children', function() {","      var parent = helpers.parse(fixtures.nullChildren)[1].expression.left;","      // parent.elements is an array with a leading null that should be ignored,","      // followed by an identifier","      var res = NodeUtils.getChildren(parent);","      expect(res).to.have.length(1);","      expect(res[0].type).to.be('Identifier');","    });","","    it('ignores empty JSXText nodes', function() {","      var parent = helpers.parse(fixtures.jsxNesting)[0].expression;","      var res = NodeUtils.getChildren(parent);","      res.forEach(node => expect(node.type).not.to.be('JSXText'));","    });","  });","","  describe('isBefore', function() {","    describe('given nodes with different line numbers', function() {","      it('returns true if the first node has a lower line number', function() {","        var res = NodeUtils.isBefore(","          {loc: {start: {line: 0, column: 0}}},","          {loc: {start: {line: 1, column: 0}}}","        );","        expect(res).to.be(true);","      });","","      it('returns false if the first node has a higher numbered line', function() {","        var res = NodeUtils.isBefore(","          {loc: {start: {line: 1, column: 0}}},","          {loc: {start: {line: 0, column: 0}}}","        );","        expect(res).to.be(false);","      });","    });","","    describe('given nodes with the same line number', function() {","      it('returns true if the first node has a lower column number', function() {","        var res = NodeUtils.isBefore(","          {loc: {start: {line: 0, column: 0}}},","          {loc: {start: {line: 0, column: 1}}}","        );","        expect(res).to.be(true);","      });","","      it('returns false if the first node has a higher column number', function() {","        var res = NodeUtils.isBefore(","          {loc: {start: {line: 0, column: 1}}},","          {loc: {start: {line: 0, column: 0}}}","        );","        expect(res).to.be(false);","      });","    });","  });","","  describe('isES6ModuleImport', function() {","    it('returns true for an import declaration', function() {","      // ImportDeclaration","      var nodes = [helpers.parse(fixtures.es6Module)[0]];","      expect(NodeUtils.isES6ModuleImport(nodes)).to.be(true);","    });","","    it('returns false for export declaration', function() {","      // ExportNamedDeclaration","      var nodes = [helpers.parse(fixtures.es6Module)[1]];","      expect(NodeUtils.isES6ModuleImport(nodes)).to.be(false);","    });","","    it('returns false otherwise', function() {","      var nodes = helpers.parse(fixtures.commonjs);","      expect(NodeUtils.isES6ModuleImport(nodes)).to.be(false);","    });","  });","","  describe('isAMD', function() {","    it('returns true for an expression containing a define', function() {","      // First expression is define","      var nodes = [helpers.parse(fixtures.amd)[0]];","      expect(NodeUtils.isAMD(nodes)).to.be(true);","    });","","    it('returns true for an expression containing a define', function() {","      // Third expression is require","      var nodes = [helpers.parse(fixtures.amd)[2]];","      expect(NodeUtils.isAMD(nodes)).to.be(true);","    });","","    it('returns true even if the function is a property', function() {","      var nodes = [helpers.parse(fixtures.amd)[4]];","      expect(NodeUtils.isAMD(nodes)).to.be(true);","    });","","    it('returns true even if a nested property', function() {","      var nodes = [helpers.parse(fixtures.amd)[6]];","      expect(NodeUtils.isAMD(nodes)).to.be(true);","    });","","    it('returns false otherwise', function() {","      var nodes = helpers.parse(fixtures.commonjs);","      expect(NodeUtils.isAMD(nodes)).to.be(false);","    });","  });","","  describe('isCommonJS', function() {","    it('returns true for an expression containing a require', function() {","      // First node is an ExpressionStatement","      var nodes = [helpers.parse(fixtures.commonjs)[0]];","      expect(NodeUtils.isCommonJS(nodes)).to.be(true);","    });","","    it('returns true for a declaration containing a require', function() {","      // Second node is a VariableDeclaration","      var nodes = [helpers.parse(fixtures.commonjs)[1]];","      expect(NodeUtils.isCommonJS(nodes)).to.be(true);","    });","","    it('returns false otherwise', function() {","      var nodes = helpers.parse(fixtures.amd);","      expect(NodeUtils.isCommonJS(nodes)).to.be(false);","    });","  });","","  describe('typesMatch', function() {","    it('returns true if all node types match', function() {","      var res = NodeUtils.typesMatch([","        {type: 'a'}, {type: 'a'}, {type: 'a'}","      ]);","      expect(res).to.be(true);","    });","","    it('returns false if not all node types match', function() {","      var res = NodeUtils.typesMatch([","        {type: 'a'}, {type: 'a'}, {type: 'b'}","      ]);","      expect(res).to.be(false);","    });","  });","","  describe('identifiersMatch', function() {","    it('returns true if all node are matching identifiers', function() {","      var res = NodeUtils.identifiersMatch([","        {name: 'a'}, {name: 'a'}, {name: 'a'}","      ]);","      expect(res).to.be(true);","    });","","    it('returns false if not all node names match', function() {","      var res = NodeUtils.identifiersMatch([","        {name: 'a'}, {name: 'a'}, {name: 'b'}","      ]);","      expect(res).to.be(false);","    });","  });","","  describe('literalsMatch', function() {","    it('returns true if all literals have the same value', function() {","      var res = NodeUtils.literalsMatch([","        {type: 'Literal', value: 'a'},","        {type: 'Literal', value: 'a'},","        {type: 'Literal', value: 'a'}","      ]);","      expect(res).to.be(true);","    });","","    it('returns false if not all literals have the same value', function() {","      var res = NodeUtils.literalsMatch([","        {type: 'Literal', value: 'a'},","        {type: 'Literal', value: 'a'},","        {type: 'Literal', value: 'b'}","      ]);","      expect(res).to.be(false);","    });","","    it('treats JSXText as a literal', function() {","      var res = NodeUtils.literalsMatch([","        {type: 'JSXText', value: 'a'},","        {type: 'JSXText', value: 'a'},","        {type: 'JSXText', value: 'b'}","      ]);","      expect(res).to.be(false);","    });","","    it('ignores the values of nodes which are not literals', function() {","      var res = NodeUtils.literalsMatch([","        {type: 'Foo', value: 'a'},","        {type: 'Foo', value: 'a'},","        {type: 'Foo', value: 'b'}","      ]);","      expect(res).to.be(true);","    });","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"57":0,"58":0,"59":0,"60":0,"63":0,"71":0,"72":0,"75":0,"76":0,"77":0,"80":0,"81":0,"82":0,"83":0,"87":0,"88":0,"89":0,"90":0,"94":0,"97":0,"98":0,"102":0,"106":0,"107":0,"108":0,"112":0,"115":0,"116":0,"120":0,"125":0,"126":0,"128":0,"129":0,"132":0,"134":0,"135":0,"138":0,"139":0,"140":0,"144":0,"145":0,"147":0,"148":0,"151":0,"153":0,"154":0,"157":0,"158":0,"159":0,"162":0,"163":0,"164":0,"167":0,"168":0,"169":0,"173":0,"174":0,"176":0,"177":0,"180":0,"182":0,"183":0,"186":0,"187":0,"188":0,"192":0,"193":0,"194":0,"197":0,"200":0,"201":0,"204":0,"208":0,"209":0,"210":0,"213":0,"216":0,"217":0,"220":0,"224":0,"225":0,"226":0,"231":0,"234":0,"235":0,"240":0,"243":0,"244":0,"249":0,"252":0,"253":0,"258":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/parserSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/parserSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":23},"end":{"line":6,"column":34}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":65},"end":{"line":10,"column":76}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":60},"end":{"line":17,"column":71}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":65},"end":{"line":24,"column":76}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"4":{"start":{"line":5,"column":0},"end":{"line":32,"column":3}},"5":{"start":{"line":6,"column":2},"end":{"line":31,"column":5}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}},"8":{"start":{"line":10,"column":4},"end":{"line":15,"column":7}},"9":{"start":{"line":11,"column":6},"end":{"line":11,"column":49}},"10":{"start":{"line":11,"column":21},"end":{"line":11,"column":48}},"11":{"start":{"line":12,"column":6},"end":{"line":14,"column":9}},"12":{"start":{"line":13,"column":8},"end":{"line":13,"column":49}},"13":{"start":{"line":17,"column":4},"end":{"line":22,"column":7}},"14":{"start":{"line":18,"column":6},"end":{"line":18,"column":49}},"15":{"start":{"line":18,"column":21},"end":{"line":18,"column":48}},"16":{"start":{"line":19,"column":6},"end":{"line":21,"column":9}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":56}},"18":{"start":{"line":24,"column":4},"end":{"line":30,"column":7}},"19":{"start":{"line":25,"column":6},"end":{"line":25,"column":38}},"20":{"start":{"line":26,"column":6},"end":{"line":26,"column":49}},"21":{"start":{"line":26,"column":21},"end":{"line":26,"column":48}},"22":{"start":{"line":27,"column":6},"end":{"line":29,"column":9}},"23":{"start":{"line":28,"column":8},"end":{"line":28,"column":48}}},"branchMap":{},"code":["var expect  = require('expect.js');","var helpers = require('./helpers');","var Parser  = require('../lib/parser');","","describe('parse', function() {","  describe('on error', function() {","    var src = '[_, = [1, 2, 3];';","    var filePath = 'broken.js';","","    it('includes the filename of the file that failed to parse', function() {","      var fn = () => Parser.parse(src, filePath);","      expect(fn).to.throwException((err) => {","        expect(err.message).to.contain(filePath);","      });","    });","","    it('includes a caret pointing to the unexpected token', function() {","      var fn = () => Parser.parse(src, filePath);","      expect(fn).to.throwException((err) => {","        expect(err.message).to.contain(`${src}\\n    ^`);","      });","    });","","    it('does not include the src line if longer than 100 chars', function() {","      var src = ' '.repeat(100) + ']';","      var fn = () => Parser.parse(src, filePath);","      expect(fn).to.throwException((err) => {","        expect(err.message).not.to.contain(`^`);","      });","    });","  });","});",""],"l":{"1":2,"2":0,"3":0,"5":0,"6":0,"7":0,"8":0,"10":0,"11":0,"12":0,"13":0,"17":0,"18":0,"19":0,"20":0,"24":0,"25":0,"26":0,"27":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/baseSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/baseSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":25}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":15}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":25},"end":{"line":19,"column":36}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":13},"end":{"line":22,"column":24}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":37}}},"7":{"name":"(anonymous_7)","line":35,"loc":{"start":{"line":35,"column":46},"end":{"line":35,"column":57}}},"8":{"name":"(anonymous_8)","line":39,"loc":{"start":{"line":39,"column":51},"end":{"line":39,"column":62}}},"9":{"name":"(anonymous_9)","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":39}}},"10":{"name":"(anonymous_10)","line":45,"loc":{"start":{"line":45,"column":38},"end":{"line":45,"column":49}}},"11":{"name":"(anonymous_11)","line":51,"loc":{"start":{"line":51,"column":29},"end":{"line":51,"column":40}}},"12":{"name":"(anonymous_12)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":44}}},"13":{"name":"(anonymous_13)","line":62,"loc":{"start":{"line":62,"column":22},"end":{"line":62,"column":33}}},"14":{"name":"(anonymous_14)","line":63,"loc":{"start":{"line":63,"column":42},"end":{"line":63,"column":53}}},"15":{"name":"(anonymous_15)","line":69,"loc":{"start":{"line":69,"column":62},"end":{"line":69,"column":73}}},"16":{"name":"(anonymous_16)","line":80,"loc":{"start":{"line":80,"column":59},"end":{"line":80,"column":70}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"10":{"start":{"line":19,"column":0},"end":{"line":86,"column":3}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}},"12":{"start":{"line":22,"column":2},"end":{"line":28,"column":5}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"14":{"start":{"line":24,"column":4},"end":{"line":26,"column":7}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":43}},"16":{"start":{"line":30,"column":2},"end":{"line":32,"column":5}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":28}},"18":{"start":{"line":34,"column":2},"end":{"line":42,"column":5}},"19":{"start":{"line":35,"column":4},"end":{"line":37,"column":7}},"20":{"start":{"line":36,"column":6},"end":{"line":36,"column":51}},"21":{"start":{"line":39,"column":4},"end":{"line":41,"column":7}},"22":{"start":{"line":40,"column":6},"end":{"line":40,"column":61}},"23":{"start":{"line":44,"column":2},"end":{"line":60,"column":5}},"24":{"start":{"line":45,"column":4},"end":{"line":49,"column":7}},"25":{"start":{"line":46,"column":6},"end":{"line":46,"column":34}},"26":{"start":{"line":47,"column":6},"end":{"line":47,"column":30}},"27":{"start":{"line":48,"column":6},"end":{"line":48,"column":39}},"28":{"start":{"line":51,"column":4},"end":{"line":59,"column":7}},"29":{"start":{"line":52,"column":6},"end":{"line":54,"column":8}},"30":{"start":{"line":53,"column":8},"end":{"line":53,"column":21}},"31":{"start":{"line":56,"column":6},"end":{"line":56,"column":41}},"32":{"start":{"line":57,"column":6},"end":{"line":57,"column":30}},"33":{"start":{"line":58,"column":6},"end":{"line":58,"column":51}},"34":{"start":{"line":62,"column":2},"end":{"line":85,"column":5}},"35":{"start":{"line":63,"column":4},"end":{"line":67,"column":7}},"36":{"start":{"line":64,"column":6},"end":{"line":64,"column":22}},"37":{"start":{"line":65,"column":6},"end":{"line":65,"column":30}},"38":{"start":{"line":66,"column":6},"end":{"line":66,"column":50}},"39":{"start":{"line":69,"column":4},"end":{"line":78,"column":7}},"40":{"start":{"line":70,"column":6},"end":{"line":72,"column":9}},"41":{"start":{"line":73,"column":6},"end":{"line":73,"column":49}},"42":{"start":{"line":75,"column":6},"end":{"line":75,"column":22}},"43":{"start":{"line":76,"column":6},"end":{"line":76,"column":30}},"44":{"start":{"line":77,"column":6},"end":{"line":77,"column":78}},"45":{"start":{"line":80,"column":4},"end":{"line":84,"column":7}},"46":{"start":{"line":81,"column":6},"end":{"line":81,"column":22}},"47":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"48":{"start":{"line":83,"column":6},"end":{"line":83,"column":75}}},"branchMap":{},"code":["var expect       = require('expect.js');","var util         = require('util');","var chalk        = require('chalk');","var fixtures     = require('../fixtures');","var helpers      = require('../helpers');","var BaseReporter = require('../../lib/reporters/base');","var Inspector    = require('../../lib/inspector');","","// A simple TestReporter for testing the BaseReporter","class TestReporter extends BaseReporter {","  constructor(inspector) {","    super(inspector);","    this._registerSummary();","  }","","  _getOutput() {}","}","","describe('BaseReporter', function() {","  var inspector, reporter;","","  beforeEach(function() {","    helpers.captureOutput();","    inspector = new Inspector([fixtures.intersection], {","      threshold: 15","    });","    reporter = new TestReporter(inspector);","  });","","  afterEach(function() {","    helpers.restoreOutput();","  });","","  describe('constructor', function() {","    it('accepts an inspector as an argument', function() {","      expect(reporter._inspector).to.be(inspector);","    });","","    it('registers a listener for the match event', function() {","      expect(inspector.listeners('match')).to.have.length(1);","    });","  });","","  describe('given a match', function() {","    it('increments the number found', function() {","      inspector.emit('match', {});","      helpers.restoreOutput();","      expect(reporter._found).to.be(1);","    });","","    it('invokes _getOutput', function() {","      reporter._getOutput = function(match) {","        return match;","      };","","      inspector.emit('match', 'invoked');","      helpers.restoreOutput();","      expect(helpers.getOutput()).to.be('invoked');","    });","  });","","  describe('summary', function() {","    it('can be printed on inspector end', function() {","      inspector.run();","      helpers.restoreOutput();","      expect(helpers.getOutput()).to.not.be(null);","    });","","    it('prints the correct results if no matches were found', function() {","      inspector = new Inspector([fixtures.intersection], {","        threshold: 40","      });","      var reporter = new TestReporter(inspector);","","      inspector.run();","      helpers.restoreOutput();","      expect(helpers.getOutput()).to.be('\\nNo matches found across 1 file\\n');","    });","","    it('prints the correct results if matches were found', function() {","      inspector.run();","      helpers.restoreOutput();","      expect(helpers.getOutput()).to.be('\\n1 match found across 1 file\\n');","    });","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"12":0,"13":0,"19":0,"20":0,"22":0,"23":0,"24":0,"27":0,"30":0,"31":0,"34":0,"35":0,"36":0,"39":0,"40":0,"44":0,"45":0,"46":0,"47":0,"48":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"70":0,"73":0,"75":0,"76":0,"77":0,"80":0,"81":0,"82":0,"83":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/defaultSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/defaultSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":28},"end":{"line":9,"column":39}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":23}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":26},"end":{"line":14,"column":37}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":57}}},"5":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":34},"end":{"line":22,"column":45}}},"6":{"name":"(anonymous_6)","line":35,"loc":{"start":{"line":35,"column":28},"end":{"line":35,"column":39}}},"7":{"name":"(anonymous_7)","line":36,"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":26}}},"8":{"name":"(anonymous_8)","line":40,"loc":{"start":{"line":40,"column":31},"end":{"line":40,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":43}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":61}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"8":{"start":{"line":9,"column":0},"end":{"line":73,"column":3}},"9":{"start":{"line":10,"column":2},"end":{"line":12,"column":5}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"11":{"start":{"line":14,"column":2},"end":{"line":20,"column":5}},"12":{"start":{"line":15,"column":4},"end":{"line":19,"column":7}},"13":{"start":{"line":16,"column":6},"end":{"line":16,"column":42}},"14":{"start":{"line":17,"column":6},"end":{"line":17,"column":52}},"15":{"start":{"line":18,"column":6},"end":{"line":18,"column":51}},"16":{"start":{"line":22,"column":2},"end":{"line":33,"column":5}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"18":{"start":{"line":24,"column":4},"end":{"line":26,"column":7}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":20}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":28}},"22":{"start":{"line":32,"column":4},"end":{"line":32,"column":76}},"23":{"start":{"line":35,"column":2},"end":{"line":72,"column":5}},"24":{"start":{"line":36,"column":4},"end":{"line":38,"column":7}},"25":{"start":{"line":37,"column":6},"end":{"line":37,"column":30}},"26":{"start":{"line":40,"column":4},"end":{"line":71,"column":7}},"27":{"start":{"line":41,"column":6},"end":{"line":43,"column":9}},"28":{"start":{"line":44,"column":6},"end":{"line":44,"column":52}},"29":{"start":{"line":46,"column":6},"end":{"line":46,"column":42}},"30":{"start":{"line":47,"column":6},"end":{"line":47,"column":22}},"31":{"start":{"line":48,"column":6},"end":{"line":48,"column":30}},"32":{"start":{"line":50,"column":6},"end":{"line":68,"column":2}},"33":{"start":{"line":70,"column":6},"end":{"line":70,"column":50}}},"branchMap":{},"code":["var expect          = require('expect.js');","var util            = require('util');","var chalk           = require('chalk');","var fixtures        = require('../fixtures');","var helpers         = require('../helpers');","var DefaultReporter = require('../../lib/reporters/default');","var Inspector       = require('../../lib/inspector');","","describe('DefaultReporter', function() {","  afterEach(function() {","    helpers.restoreOutput();","  });","","  describe('constructor', function() {","    it('accepts an inspector as an argument', function() {","      var inspector = new Inspector(['']);","      var reporter = new DefaultReporter(inspector);","      expect(reporter._inspector).to.be(inspector);","    });","  });","","  it('prints the summary on end', function() {","    helpers.captureOutput();","    var inspector = new Inspector([fixtures.intersection], {","      threshold: 40","    });","    var reporter = new DefaultReporter(inspector);","","    inspector.run();","    helpers.restoreOutput();","","    expect(helpers.getOutput()).to.be('\\nNo matches found across 1 file\\n');","  });","","  describe('given a match', function() {","    beforeEach(function() {","      helpers.captureOutput();","    });","","    it('prints the instances', function() {","      var inspector = new Inspector([fixtures.intersection], {","        threshold: 15","      });","      var reporter = new DefaultReporter(inspector);","","      inspector.removeAllListeners('end');","      inspector.run();","      helpers.restoreOutput();","","      var expected = `","------------------------------------------------------------","","Match - 2 instances","","spec/fixtures/intersection.js:1,5","function intersectionA(array1, array2) {","  array1.filter(function(n) {","    return array2.indexOf(n) != -1;","  });","}","","spec/fixtures/intersection.js:7,11","function intersectionB(arrayA, arrayB) {","  arrayA.filter(function(n) {","    return arrayB.indexOf(n) != -1;","  });","}","`;","","      expect(helpers.getOutput()).to.be(expected);","    });","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"9":0,"10":0,"11":0,"14":0,"15":0,"16":0,"17":0,"18":0,"22":0,"23":0,"24":0,"27":0,"29":0,"30":0,"32":0,"35":0,"36":0,"37":0,"40":0,"41":0,"44":0,"46":0,"47":0,"48":0,"50":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/jsonSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/jsonSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":36}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":23}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":26},"end":{"line":15,"column":37}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":57}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":26},"end":{"line":23,"column":37}}},"6":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":28},"end":{"line":36,"column":39}}},"7":{"name":"(anonymous_7)","line":37,"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":26}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":50},"end":{"line":41,"column":61}}},"9":{"name":"(anonymous_9)","line":78,"loc":{"start":{"line":78,"column":37},"end":{"line":78,"column":52}}},"10":{"name":"onFinish","line":90,"loc":{"start":{"line":90,"column":4},"end":{"line":90,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"9":{"start":{"line":10,"column":0},"end":{"line":97,"column":3}},"10":{"start":{"line":11,"column":2},"end":{"line":13,"column":5}},"11":{"start":{"line":12,"column":4},"end":{"line":12,"column":28}},"12":{"start":{"line":15,"column":2},"end":{"line":21,"column":5}},"13":{"start":{"line":16,"column":4},"end":{"line":20,"column":7}},"14":{"start":{"line":17,"column":6},"end":{"line":17,"column":42}},"15":{"start":{"line":18,"column":6},"end":{"line":18,"column":49}},"16":{"start":{"line":19,"column":6},"end":{"line":19,"column":51}},"17":{"start":{"line":23,"column":2},"end":{"line":34,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":26,"column":7}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":47}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":28}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":20}},"22":{"start":{"line":31,"column":4},"end":{"line":31,"column":28}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"24":{"start":{"line":36,"column":2},"end":{"line":76,"column":5}},"25":{"start":{"line":37,"column":4},"end":{"line":39,"column":7}},"26":{"start":{"line":38,"column":6},"end":{"line":38,"column":30}},"27":{"start":{"line":41,"column":4},"end":{"line":75,"column":7}},"28":{"start":{"line":42,"column":6},"end":{"line":44,"column":9}},"29":{"start":{"line":45,"column":6},"end":{"line":45,"column":49}},"30":{"start":{"line":46,"column":6},"end":{"line":46,"column":54}},"31":{"start":{"line":48,"column":6},"end":{"line":48,"column":44}},"32":{"start":{"line":49,"column":6},"end":{"line":49,"column":42}},"33":{"start":{"line":51,"column":6},"end":{"line":51,"column":22}},"34":{"start":{"line":52,"column":6},"end":{"line":52,"column":30}},"35":{"start":{"line":54,"column":6},"end":{"line":54,"column":57}},"36":{"start":{"line":55,"column":6},"end":{"line":74,"column":9}},"37":{"start":{"line":78,"column":2},"end":{"line":96,"column":5}},"38":{"start":{"line":79,"column":4},"end":{"line":81,"column":7}},"39":{"start":{"line":82,"column":4},"end":{"line":82,"column":40}},"40":{"start":{"line":83,"column":4},"end":{"line":85,"column":7}},"41":{"start":{"line":86,"column":4},"end":{"line":86,"column":52}},"42":{"start":{"line":88,"column":4},"end":{"line":88,"column":20}},"43":{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},"44":{"start":{"line":91,"column":6},"end":{"line":93,"column":8}},"45":{"start":{"line":94,"column":6},"end":{"line":94,"column":13}}},"branchMap":{},"code":["var expect       = require('expect.js');","var util         = require('util');","var chalk        = require('chalk');","var concat       = require('concat-stream')","var fixtures     = require('../fixtures');","var helpers      = require('../helpers');","var JSONReporter = require('../../lib/reporters/json');","var Inspector    = require('../../lib/inspector');","","describe('JSONReporter', function() {","  afterEach(function() {","    helpers.restoreOutput();","  });","","  describe('constructor', function() {","    it('accepts an inspector as an argument', function() {","      var inspector = new Inspector(['']);","      var reporter = new JSONReporter(inspector);","      expect(reporter._inspector).to.be(inspector);","    });","  });","","  it('prints valid json', function() {","    var inspector = new Inspector([fixtures.smallLines], {","      threshold: 1","    });","    var reporter = new JSONReporter(inspector);","","    helpers.captureOutput();","    inspector.run();","    helpers.restoreOutput();","","    JSON.parse(helpers.getOutput());","  });","","  describe('given a match', function() {","    beforeEach(function() {","      helpers.captureOutput();","    });","","    it('prints the instances and their location', function() {","      var inspector = new Inspector([fixtures.smallLines], {","        threshold: 1","      });","      var reporter = new JSONReporter(inspector);","      var matches = helpers.collectMatches(inspector);","","      inspector.removeAllListeners('start');","      inspector.removeAllListeners('end');","","      inspector.run();","      helpers.restoreOutput();","","      var parsedOutput = JSON.parse(helpers.getOutput());","      expect(parsedOutput).to.eql({","        id: '8ee1b37f99571a8917be385c2924f659762c1349',","        instances: [","          {","            path: 'spec/fixtures/smallLines.js',","            lines: [1,1],","            code: 'test = function() { return 1; };'","          },","          {","            path: 'spec/fixtures/smallLines.js',","            lines: [2,2],","            code: 'test = function() { return 2; };'","          },","          {","            path: 'spec/fixtures/smallLines.js',","            lines: [3,3],","            code: 'test = function() { return 3; };'","          }","        ]","      });","    });","  });","","  it('can write to a custom stream', function(done) {","    var inspector = new Inspector([fixtures.smallLines], {","      threshold: 1","    });","    var concatStream = concat(onFinish);","    var reporter = new JSONReporter(inspector, {","      writableStream: concatStream","    });","    var matches = helpers.collectMatches(inspector);","","    inspector.run();","","    function onFinish(data) {","      expect(JSON.parse(data)[0].id).to.be(","        '8ee1b37f99571a8917be385c2924f659762c1349'","      );","      done();","    }","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"10":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"23":0,"24":0,"27":0,"29":0,"30":0,"31":0,"33":0,"36":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"78":0,"79":0,"82":0,"83":0,"86":0,"88":0,"90":1,"91":0,"94":0}},"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/pmdSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsinspect/node_modules/jsinspect/spec/reporters/pmdSpec.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":24},"end":{"line":9,"column":35}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":23}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":26},"end":{"line":14,"column":37}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":57}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":39}}},"6":{"name":"(anonymous_6)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":26}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":65},"end":{"line":29,"column":76}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"8":{"start":{"line":9,"column":0},"end":{"line":63,"column":3}},"9":{"start":{"line":10,"column":2},"end":{"line":12,"column":5}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"11":{"start":{"line":14,"column":2},"end":{"line":22,"column":5}},"12":{"start":{"line":15,"column":4},"end":{"line":21,"column":7}},"13":{"start":{"line":16,"column":6},"end":{"line":16,"column":30}},"14":{"start":{"line":18,"column":6},"end":{"line":18,"column":38}},"15":{"start":{"line":19,"column":6},"end":{"line":19,"column":44}},"16":{"start":{"line":20,"column":6},"end":{"line":20,"column":51}},"17":{"start":{"line":24,"column":2},"end":{"line":62,"column":5}},"18":{"start":{"line":25,"column":4},"end":{"line":27,"column":7}},"19":{"start":{"line":26,"column":6},"end":{"line":26,"column":30}},"20":{"start":{"line":29,"column":4},"end":{"line":61,"column":7}},"21":{"start":{"line":30,"column":6},"end":{"line":30,"column":39}},"22":{"start":{"line":32,"column":6},"end":{"line":32,"column":71}},"23":{"start":{"line":33,"column":6},"end":{"line":33,"column":44}},"24":{"start":{"line":34,"column":6},"end":{"line":34,"column":50}},"25":{"start":{"line":36,"column":6},"end":{"line":36,"column":44}},"26":{"start":{"line":37,"column":6},"end":{"line":37,"column":42}},"27":{"start":{"line":39,"column":6},"end":{"line":39,"column":22}},"28":{"start":{"line":40,"column":6},"end":{"line":40,"column":30}},"29":{"start":{"line":42,"column":6},"end":{"line":58,"column":9}},"30":{"start":{"line":60,"column":6},"end":{"line":60,"column":51}}},"branchMap":{},"code":["var expect      = require('expect.js');","var util        = require('util');","var chalk       = require('chalk');","var fixtures    = require('../fixtures');","var helpers     = require('../helpers');","var PMDReporter = require('../../lib/reporters/pmd');","var Inspector   = require('../../lib/inspector');","","describe('PMDReporter', function() {","  afterEach(function() {","    helpers.restoreOutput();","  });","","  describe('constructor', function() {","    it('accepts an inspector as an argument', function() {","      var inspector, reporter;","","      inspector = new Inspector(['']);","      reporter = new PMDReporter(inspector);","      expect(reporter._inspector).to.be(inspector);","    });","  });","","  describe('given a match', function() {","    beforeEach(function() {","      helpers.captureOutput();","    });","","    it('prints paths and line numbers in a duplication element', function() {","      var inspector, reporter, matches;","","      inspector = new Inspector([fixtures.smallLines], {threshold: 1});","      reporter = new PMDReporter(inspector);","      matches = helpers.collectMatches(inspector);","","      inspector.removeAllListeners('start');","      inspector.removeAllListeners('end');","","      inspector.run();","      helpers.restoreOutput();","","      var expected = helpers.trimlines(","        `<duplication lines=\"3\" id=\"${matches[0].hash}\">","        <file path=\"${fixtures.smallLines}\" line=\"1\"/>","        <file path=\"${fixtures.smallLines}\" line=\"2\"/>","        <file path=\"${fixtures.smallLines}\" line=\"3\"/>","        <codefragment>","        spec/fixtures/smallLines.js:1,1","        test = function() { return 1; };","","        spec/fixtures/smallLines.js:2,2","        test = function() { return 2; };","","        spec/fixtures/smallLines.js:3,3","        test = function() { return 3; };","        </codefragment>","        </duplication>","      `);","","      expect(helpers.getOutput()).to.eql(expected);","    });","  });","});",""],"l":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"9":0,"10":0,"11":0,"14":0,"15":0,"16":0,"18":0,"19":0,"20":0,"24":0,"25":0,"26":0,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"42":0,"60":0}}}